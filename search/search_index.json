{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"edp-keycloak-operator Jsonnet library","text":"<p>This library is generated with <code>k8s</code>.</p> <ul> <li>1.15.0</li> <li>1.17.0</li> </ul>"},{"location":"1.15.0/","title":"edp-keycloak-operator","text":"<pre><code>local edp-keycloak-operator = import \"github.com/jsonnet-libs/edp-keycloak-operator-libsonnet/1.15.0/main.libsonnet\"\n</code></pre> <ul> <li>v1</li> </ul>"},{"location":"1.15.0/v1/","title":"v1","text":"<ul> <li>v1</li> <li>v1alpha1</li> </ul>"},{"location":"1.15.0/v1/v1/","title":"v1.v1","text":"<ul> <li>keycloak</li> <li>keycloakAuthFlow</li> <li>keycloakClient</li> <li>keycloakClientScope</li> <li>keycloakRealm</li> <li>keycloakRealmComponent</li> <li>keycloakRealmGroup</li> <li>keycloakRealmIdentityProvider</li> <li>keycloakRealmRole</li> <li>keycloakRealmRoleBatch</li> <li>keycloakRealmUser</li> </ul>"},{"location":"1.15.0/v1/v1/keycloak/","title":"v1.v1.keycloak","text":"<p>\"Keycloak is the Schema for the keycloaks API.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAdminType(adminType)</code></li> <li><code>fn withSecret(secret)</code></li> <li><code>fn withUrl(url)</code></li> </ul>"},{"location":"1.15.0/v1/v1/keycloak/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloak/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Keycloak</p>"},{"location":"1.15.0/v1/v1/keycloak/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#obj-spec","title":"obj spec","text":"<p>\"KeycloakSpec defines the desired state of Keycloak.\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-specwithadmintype","title":"fn spec.withAdminType","text":"<pre><code>withAdminType(adminType)\n</code></pre> <p>\"AdminType can be user or serviceAccount, if serviceAccount was specified, then client_credentials grant type should be used for getting admin realm token\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-specwithsecret","title":"fn spec.withSecret","text":"<pre><code>withSecret(secret)\n</code></pre> <p>\"Secret is the name of the k8s object Secret related to keycloak\"</p>"},{"location":"1.15.0/v1/v1/keycloak/#fn-specwithurl","title":"fn spec.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL of keycloak service\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/","title":"v1.v1.keycloakAuthFlow","text":"<p>\"KeycloakAuthFlow is the Schema for the keycloak authentication flow API.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticationExecutions(authenticationExecutions)</code></li> <li><code>fn withAuthenticationExecutionsMixin(authenticationExecutions)</code></li> <li><code>fn withBuiltIn(builtIn)</code></li> <li><code>fn withChildType(childType)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withParentName(parentName)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withTopLevel(topLevel)</code></li> <li><code>obj spec.authenticationExecutions</code><ul> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticator(authenticator)</code></li> <li><code>fn withAuthenticatorFlow(authenticatorFlow)</code></li> <li><code>fn withPriority(priority)</code></li> <li><code>fn withRequirement(requirement)</code></li> <li><code>obj spec.authenticationExecutions.authenticatorConfig</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakAuthFlow</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#obj-spec","title":"obj spec","text":"<p>\"KeycloakAuthFlowSpec defines the desired state of KeycloakAuthFlow.\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specwithalias","title":"fn spec.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre> <p>\"Alias is display name for authentication flow\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specwithauthenticationexecutions","title":"fn spec.withAuthenticationExecutions","text":"<pre><code>withAuthenticationExecutions(authenticationExecutions)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specwithauthenticationexecutionsmixin","title":"fn spec.withAuthenticationExecutionsMixin","text":"<pre><code>withAuthenticationExecutionsMixin(authenticationExecutions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specwithbuiltin","title":"fn spec.withBuiltIn","text":"<pre><code>withBuiltIn(builtIn)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specwithchildtype","title":"fn spec.withChildType","text":"<pre><code>withChildType(childType)\n</code></pre> <p>\"ChildType is type for auth flow if it has a parent, available options: basic-flow, form-flow\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specwithparentname","title":"fn spec.withParentName","text":"<pre><code>withParentName(parentName)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre> <p>\"ProviderID for root auth flow and provider for child auth flows\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Realm is name of keycloak realm\"</p>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specwithtoplevel","title":"fn spec.withTopLevel","text":"<pre><code>withTopLevel(topLevel)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#obj-specauthenticationexecutions","title":"obj spec.authenticationExecutions","text":""},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionswithalias","title":"fn spec.authenticationExecutions.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionswithauthenticator","title":"fn spec.authenticationExecutions.withAuthenticator","text":"<pre><code>withAuthenticator(authenticator)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionswithauthenticatorflow","title":"fn spec.authenticationExecutions.withAuthenticatorFlow","text":"<pre><code>withAuthenticatorFlow(authenticatorFlow)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionswithpriority","title":"fn spec.authenticationExecutions.withPriority","text":"<pre><code>withPriority(priority)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionswithrequirement","title":"fn spec.authenticationExecutions.withRequirement","text":"<pre><code>withRequirement(requirement)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#obj-specauthenticationexecutionsauthenticatorconfig","title":"obj spec.authenticationExecutions.authenticatorConfig","text":""},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithalias","title":"fn spec.authenticationExecutions.authenticatorConfig.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithconfig","title":"fn spec.authenticationExecutions.authenticatorConfig.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithconfigmixin","title":"fn spec.authenticationExecutions.authenticatorConfig.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/","title":"v1.v1.keycloakClient","text":"<p>\"KeycloakClient is the Schema for the keycloak clients API.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAdvancedProtocolMappers(advancedProtocolMappers)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withDefaultClientScopes(defaultClientScopes)</code></li> <li><code>fn withDefaultClientScopesMixin(defaultClientScopes)</code></li> <li><code>fn withDirectAccess(directAccess)</code></li> <li><code>fn withFrontChannelLogout(frontChannelLogout)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMappers(protocolMappers)</code></li> <li><code>fn withProtocolMappersMixin(protocolMappers)</code></li> <li><code>fn withPublic(public)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withReconciliationStrategy(reconciliationStrategy)</code></li> <li><code>fn withSecret(secret)</code></li> <li><code>fn withTargetRealm(targetRealm)</code></li> <li><code>fn withWebUrl(webUrl)</code></li> <li><code>obj spec.protocolMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMapper(protocolMapper)</code></li> </ul> </li> <li><code>obj spec.realmRoles</code><ul> <li><code>fn withComposite(composite)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.serviceAccount</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>obj spec.serviceAccount.clientRoles</code></li> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1/keycloakClient/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloakClient/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakClient</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#obj-spec","title":"obj spec","text":"<p>\"KeycloakClientSpec defines the desired state of KeycloakClient.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithadvancedprotocolmappers","title":"fn spec.withAdvancedProtocolMappers","text":"<pre><code>withAdvancedProtocolMappers(advancedProtocolMappers)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithclientid","title":"fn spec.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre> <p>\"ClientId is a unique keycloak client ID referenced in URI and tokens.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithclientroles","title":"fn spec.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithclientrolesmixin","title":"fn spec.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithdefaultclientscopes","title":"fn spec.withDefaultClientScopes","text":"<pre><code>withDefaultClientScopes(defaultClientScopes)\n</code></pre> <p>\"A list of default client scopes for a keycloak client.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithdefaultclientscopesmixin","title":"fn spec.withDefaultClientScopesMixin","text":"<pre><code>withDefaultClientScopesMixin(defaultClientScopes)\n</code></pre> <p>\"A list of default client scopes for a keycloak client.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithdirectaccess","title":"fn spec.withDirectAccess","text":"<pre><code>withDirectAccess(directAccess)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithfrontchannellogout","title":"fn spec.withFrontChannelLogout","text":"<pre><code>withFrontChannelLogout(frontChannelLogout)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithprotocol","title":"fn spec.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithprotocolmappers","title":"fn spec.withProtocolMappers","text":"<pre><code>withProtocolMappers(protocolMappers)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithprotocolmappersmixin","title":"fn spec.withProtocolMappersMixin","text":"<pre><code>withProtocolMappersMixin(protocolMappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithpublic","title":"fn spec.withPublic","text":"<pre><code>withPublic(public)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithrealmroles","title":"fn spec.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithrealmrolesmixin","title":"fn spec.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithreconciliationstrategy","title":"fn spec.withReconciliationStrategy","text":"<pre><code>withReconciliationStrategy(reconciliationStrategy)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithsecret","title":"fn spec.withSecret","text":"<pre><code>withSecret(secret)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithtargetrealm","title":"fn spec.withTargetRealm","text":"<pre><code>withTargetRealm(targetRealm)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specwithweburl","title":"fn spec.withWebUrl","text":"<pre><code>withWebUrl(webUrl)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#obj-specprotocolmappers","title":"obj spec.protocolMappers","text":""},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specprotocolmapperswithconfig","title":"fn spec.protocolMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specprotocolmapperswithconfigmixin","title":"fn spec.protocolMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specprotocolmapperswithname","title":"fn spec.protocolMappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specprotocolmapperswithprotocol","title":"fn spec.protocolMappers.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specprotocolmapperswithprotocolmapper","title":"fn spec.protocolMappers.withProtocolMapper","text":"<pre><code>withProtocolMapper(protocolMapper)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#obj-specrealmroles","title":"obj spec.realmRoles","text":""},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specrealmroleswithcomposite","title":"fn spec.realmRoles.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specrealmroleswithname","title":"fn spec.realmRoles.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#obj-specserviceaccount","title":"obj spec.serviceAccount","text":""},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specserviceaccountwithattributes","title":"fn spec.serviceAccount.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specserviceaccountwithattributesmixin","title":"fn spec.serviceAccount.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specserviceaccountwithclientroles","title":"fn spec.serviceAccount.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specserviceaccountwithclientrolesmixin","title":"fn spec.serviceAccount.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specserviceaccountwithenabled","title":"fn spec.serviceAccount.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specserviceaccountwithrealmroles","title":"fn spec.serviceAccount.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specserviceaccountwithrealmrolesmixin","title":"fn spec.serviceAccount.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClient/#obj-specserviceaccountclientroles","title":"obj spec.serviceAccount.clientRoles","text":""},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specserviceaccountclientroleswithclientid","title":"fn spec.serviceAccount.clientRoles.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specserviceaccountclientroleswithroles","title":"fn spec.serviceAccount.clientRoles.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClient/#fn-specserviceaccountclientroleswithrolesmixin","title":"fn spec.serviceAccount.clientRoles.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/","title":"v1.v1.keycloakClientScope","text":"<p>\"KeycloakClientScope is the Schema for the keycloakclientscopes API.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withDefault(default)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMappers(protocolMappers)</code></li> <li><code>fn withProtocolMappersMixin(protocolMappers)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>obj spec.protocolMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMapper(protocolMapper)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakClientScope</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#obj-spec","title":"obj spec","text":"<p>\"KeycloakClientScopeSpec defines the desired state of KeycloakClientScope.\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specwithdefault","title":"fn spec.withDefault","text":"<pre><code>withDefault(default)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of keycloak client scope\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specwithprotocol","title":"fn spec.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is SSO protocol configuration which is being supplied by this client scope\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specwithprotocolmappers","title":"fn spec.withProtocolMappers","text":"<pre><code>withProtocolMappers(protocolMappers)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specwithprotocolmappersmixin","title":"fn spec.withProtocolMappersMixin","text":"<pre><code>withProtocolMappersMixin(protocolMappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Realm is name of keycloak realm\"</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#obj-specprotocolmappers","title":"obj spec.protocolMappers","text":""},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specprotocolmapperswithconfig","title":"fn spec.protocolMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specprotocolmapperswithconfigmixin","title":"fn spec.protocolMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specprotocolmapperswithname","title":"fn spec.protocolMappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specprotocolmapperswithprotocol","title":"fn spec.protocolMappers.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakClientScope/#fn-specprotocolmapperswithprotocolmapper","title":"fn spec.protocolMappers.withProtocolMapper","text":"<pre><code>withProtocolMapper(protocolMapper)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/","title":"v1.v1.keycloakRealm","text":"<p>\"KeycloakRealm is the Schema for the keycloak realms API.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withBrowserFlow(browserFlow)</code></li> <li><code>fn withBrowserSecurityHeaders(browserSecurityHeaders)</code></li> <li><code>fn withBrowserSecurityHeadersMixin(browserSecurityHeaders)</code></li> <li><code>fn withDisableCentralIDPMappers(disableCentralIDPMappers)</code></li> <li><code>fn withId(id)</code></li> <li><code>fn withKeycloakOwner(keycloakOwner)</code></li> <li><code>fn withPasswordPolicy(passwordPolicy)</code></li> <li><code>fn withPasswordPolicyMixin(passwordPolicy)</code></li> <li><code>fn withRealmName(realmName)</code></li> <li><code>fn withSsoAutoRedirectEnabled(ssoAutoRedirectEnabled)</code></li> <li><code>fn withSsoRealmEnabled(ssoRealmEnabled)</code></li> <li><code>fn withSsoRealmMappers(ssoRealmMappers)</code></li> <li><code>fn withSsoRealmMappersMixin(ssoRealmMappers)</code></li> <li><code>fn withSsoRealmName(ssoRealmName)</code></li> <li><code>fn withUsers(users)</code></li> <li><code>fn withUsersMixin(users)</code></li> <li><code>obj spec.passwordPolicy</code><ul> <li><code>fn withType(type)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.realmEventConfig</code><ul> <li><code>fn withAdminEventsDetailsEnabled(adminEventsDetailsEnabled)</code></li> <li><code>fn withAdminEventsEnabled(adminEventsEnabled)</code></li> <li><code>fn withEnabledEventTypes(enabledEventTypes)</code></li> <li><code>fn withEnabledEventTypesMixin(enabledEventTypes)</code></li> <li><code>fn withEventsEnabled(eventsEnabled)</code></li> <li><code>fn withEventsExpiration(eventsExpiration)</code></li> <li><code>fn withEventsListeners(eventsListeners)</code></li> <li><code>fn withEventsListenersMixin(eventsListeners)</code></li> </ul> </li> <li><code>obj spec.ssoRealmMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withIdentityProviderMapper(identityProviderMapper)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.themes</code><ul> <li><code>fn withAccountTheme(accountTheme)</code></li> <li><code>fn withAdminConsoleTheme(adminConsoleTheme)</code></li> <li><code>fn withEmailTheme(emailTheme)</code></li> <li><code>fn withInternationalizationEnabled(internationalizationEnabled)</code></li> <li><code>fn withLoginTheme(loginTheme)</code></li> </ul> </li> <li><code>obj spec.users</code><ul> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withUsername(username)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealm</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmSpec defines the desired state of KeycloakRealm.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithbrowserflow","title":"fn spec.withBrowserFlow","text":"<pre><code>withBrowserFlow(browserFlow)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithbrowsersecurityheaders","title":"fn spec.withBrowserSecurityHeaders","text":"<pre><code>withBrowserSecurityHeaders(browserSecurityHeaders)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithbrowsersecurityheadersmixin","title":"fn spec.withBrowserSecurityHeadersMixin","text":"<pre><code>withBrowserSecurityHeadersMixin(browserSecurityHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithdisablecentralidpmappers","title":"fn spec.withDisableCentralIDPMappers","text":"<pre><code>withDisableCentralIDPMappers(disableCentralIDPMappers)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithid","title":"fn spec.withId","text":"<pre><code>withId(id)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithkeycloakowner","title":"fn spec.withKeycloakOwner","text":"<pre><code>withKeycloakOwner(keycloakOwner)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithpasswordpolicy","title":"fn spec.withPasswordPolicy","text":"<pre><code>withPasswordPolicy(passwordPolicy)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithpasswordpolicymixin","title":"fn spec.withPasswordPolicyMixin","text":"<pre><code>withPasswordPolicyMixin(passwordPolicy)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithrealmname","title":"fn spec.withRealmName","text":"<pre><code>withRealmName(realmName)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithssoautoredirectenabled","title":"fn spec.withSsoAutoRedirectEnabled","text":"<pre><code>withSsoAutoRedirectEnabled(ssoAutoRedirectEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithssorealmenabled","title":"fn spec.withSsoRealmEnabled","text":"<pre><code>withSsoRealmEnabled(ssoRealmEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithssorealmmappers","title":"fn spec.withSsoRealmMappers","text":"<pre><code>withSsoRealmMappers(ssoRealmMappers)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithssorealmmappersmixin","title":"fn spec.withSsoRealmMappersMixin","text":"<pre><code>withSsoRealmMappersMixin(ssoRealmMappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithssorealmname","title":"fn spec.withSsoRealmName","text":"<pre><code>withSsoRealmName(ssoRealmName)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithusers","title":"fn spec.withUsers","text":"<pre><code>withUsers(users)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specwithusersmixin","title":"fn spec.withUsersMixin","text":"<pre><code>withUsersMixin(users)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#obj-specpasswordpolicy","title":"obj spec.passwordPolicy","text":""},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specpasswordpolicywithtype","title":"fn spec.passwordPolicy.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specpasswordpolicywithvalue","title":"fn spec.passwordPolicy.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#obj-specrealmeventconfig","title":"obj spec.realmEventConfig","text":""},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwithadmineventsdetailsenabled","title":"fn spec.realmEventConfig.withAdminEventsDetailsEnabled","text":"<pre><code>withAdminEventsDetailsEnabled(adminEventsDetailsEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwithadmineventsenabled","title":"fn spec.realmEventConfig.withAdminEventsEnabled","text":"<pre><code>withAdminEventsEnabled(adminEventsEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwithenabledeventtypes","title":"fn spec.realmEventConfig.withEnabledEventTypes","text":"<pre><code>withEnabledEventTypes(enabledEventTypes)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwithenabledeventtypesmixin","title":"fn spec.realmEventConfig.withEnabledEventTypesMixin","text":"<pre><code>withEnabledEventTypesMixin(enabledEventTypes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwitheventsenabled","title":"fn spec.realmEventConfig.withEventsEnabled","text":"<pre><code>withEventsEnabled(eventsEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwitheventsexpiration","title":"fn spec.realmEventConfig.withEventsExpiration","text":"<pre><code>withEventsExpiration(eventsExpiration)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwitheventslisteners","title":"fn spec.realmEventConfig.withEventsListeners","text":"<pre><code>withEventsListeners(eventsListeners)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwitheventslistenersmixin","title":"fn spec.realmEventConfig.withEventsListenersMixin","text":"<pre><code>withEventsListenersMixin(eventsListeners)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#obj-specssorealmmappers","title":"obj spec.ssoRealmMappers","text":""},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specssorealmmapperswithconfig","title":"fn spec.ssoRealmMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specssorealmmapperswithconfigmixin","title":"fn spec.ssoRealmMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specssorealmmapperswithidentityprovidermapper","title":"fn spec.ssoRealmMappers.withIdentityProviderMapper","text":"<pre><code>withIdentityProviderMapper(identityProviderMapper)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specssorealmmapperswithname","title":"fn spec.ssoRealmMappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#obj-specthemes","title":"obj spec.themes","text":""},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specthemeswithaccounttheme","title":"fn spec.themes.withAccountTheme","text":"<pre><code>withAccountTheme(accountTheme)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specthemeswithadminconsoletheme","title":"fn spec.themes.withAdminConsoleTheme","text":"<pre><code>withAdminConsoleTheme(adminConsoleTheme)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specthemeswithemailtheme","title":"fn spec.themes.withEmailTheme","text":"<pre><code>withEmailTheme(emailTheme)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specthemeswithinternationalizationenabled","title":"fn spec.themes.withInternationalizationEnabled","text":"<pre><code>withInternationalizationEnabled(internationalizationEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specthemeswithlogintheme","title":"fn spec.themes.withLoginTheme","text":"<pre><code>withLoginTheme(loginTheme)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealm/#obj-specusers","title":"obj spec.users","text":""},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specuserswithrealmroles","title":"fn spec.users.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specuserswithrealmrolesmixin","title":"fn spec.users.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealm/#fn-specuserswithusername","title":"fn spec.users.withUsername","text":"<pre><code>withUsername(username)\n</code></pre> <p>\"Username of keycloak user\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/","title":"v1.v1.keycloakRealmComponent","text":"<p>\"KeycloakRealmComponent is the Schema for the keycloak component API.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withProviderType(providerType)</code></li> <li><code>fn withRealm(realm)</code></li> </ul>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmComponent</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#obj-spec","title":"obj spec","text":"<p>\"KeycloakComponentSpec defines the desired state of KeycloakRealmComponent.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-specwithconfig","title":"fn spec.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-specwithconfigmixin","title":"fn spec.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-specwithprovidertype","title":"fn spec.withProviderType","text":"<pre><code>withProviderType(providerType)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmComponent/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/","title":"v1.v1.keycloakRealmGroup","text":"<p>\"KeycloakRealmGroup is the Schema for the keycloak group API.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAccess(access)</code></li> <li><code>fn withAccessMixin(access)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withSubGroups(subGroups)</code></li> <li><code>fn withSubGroupsMixin(subGroups)</code></li> <li><code>obj spec.clientRoles</code><ul> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmGroup</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmGroupSpec defines the desired state of KeycloakRealmGroup.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithaccess","title":"fn spec.withAccess","text":"<pre><code>withAccess(access)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithaccessmixin","title":"fn spec.withAccessMixin","text":"<pre><code>withAccessMixin(access)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithclientroles","title":"fn spec.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithclientrolesmixin","title":"fn spec.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithpath","title":"fn spec.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithrealmroles","title":"fn spec.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithrealmrolesmixin","title":"fn spec.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithsubgroups","title":"fn spec.withSubGroups","text":"<pre><code>withSubGroups(subGroups)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specwithsubgroupsmixin","title":"fn spec.withSubGroupsMixin","text":"<pre><code>withSubGroupsMixin(subGroups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#obj-specclientroles","title":"obj spec.clientRoles","text":""},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specclientroleswithclientid","title":"fn spec.clientRoles.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specclientroleswithroles","title":"fn spec.clientRoles.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmGroup/#fn-specclientroleswithrolesmixin","title":"fn spec.clientRoles.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/","title":"v1.v1.keycloakRealmIdentityProvider","text":"<p>\"KeycloakRealmIdentityProvider is the Schema for the keycloak realm identity provider API.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddReadTokenRoleOnCreate(addReadTokenRoleOnCreate)</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticateByDefault(authenticateByDefault)</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withDisplayName(displayName)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFirstBrokerLoginFlowAlias(firstBrokerLoginFlowAlias)</code></li> <li><code>fn withLinkOnly(linkOnly)</code></li> <li><code>fn withMappers(mappers)</code></li> <li><code>fn withMappersMixin(mappers)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withStoreToken(storeToken)</code></li> <li><code>fn withTrustEmail(trustEmail)</code></li> <li><code>obj spec.mappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withIdentityProviderAlias(identityProviderAlias)</code></li> <li><code>fn withIdentityProviderMapper(identityProviderMapper)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmIdentityProvider</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmIdentityProviderSpec defines the desired state of KeycloakRealmIdentityProvider.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithaddreadtokenroleoncreate","title":"fn spec.withAddReadTokenRoleOnCreate","text":"<pre><code>withAddReadTokenRoleOnCreate(addReadTokenRoleOnCreate)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithalias","title":"fn spec.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithauthenticatebydefault","title":"fn spec.withAuthenticateByDefault","text":"<pre><code>withAuthenticateByDefault(authenticateByDefault)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithconfig","title":"fn spec.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithconfigmixin","title":"fn spec.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithdisplayname","title":"fn spec.withDisplayName","text":"<pre><code>withDisplayName(displayName)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithenabled","title":"fn spec.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithfirstbrokerloginflowalias","title":"fn spec.withFirstBrokerLoginFlowAlias","text":"<pre><code>withFirstBrokerLoginFlowAlias(firstBrokerLoginFlowAlias)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithlinkonly","title":"fn spec.withLinkOnly","text":"<pre><code>withLinkOnly(linkOnly)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithmappers","title":"fn spec.withMappers","text":"<pre><code>withMappers(mappers)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithmappersmixin","title":"fn spec.withMappersMixin","text":"<pre><code>withMappersMixin(mappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithstoretoken","title":"fn spec.withStoreToken","text":"<pre><code>withStoreToken(storeToken)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithtrustemail","title":"fn spec.withTrustEmail","text":"<pre><code>withTrustEmail(trustEmail)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#obj-specmappers","title":"obj spec.mappers","text":""},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specmapperswithconfig","title":"fn spec.mappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specmapperswithconfigmixin","title":"fn spec.mappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specmapperswithidentityprovideralias","title":"fn spec.mappers.withIdentityProviderAlias","text":"<pre><code>withIdentityProviderAlias(identityProviderAlias)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specmapperswithidentityprovidermapper","title":"fn spec.mappers.withIdentityProviderMapper","text":"<pre><code>withIdentityProviderMapper(identityProviderMapper)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmIdentityProvider/#fn-specmapperswithname","title":"fn spec.mappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/","title":"v1.v1.keycloakRealmRole","text":"<p>\"KeycloakRealmRole is the Schema for the keycloak group API.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withComposite(composite)</code></li> <li><code>fn withComposites(composites)</code></li> <li><code>fn withCompositesMixin(composites)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withIsDefault(isDefault)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>obj spec.composites</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmRole</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmRoleSpec defines the desired state of KeycloakRealmRole.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-specwithcomposite","title":"fn spec.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-specwithcomposites","title":"fn spec.withComposites","text":"<pre><code>withComposites(composites)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-specwithcompositesmixin","title":"fn spec.withCompositesMixin","text":"<pre><code>withCompositesMixin(composites)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-specwithisdefault","title":"fn spec.withIsDefault","text":"<pre><code>withIsDefault(isDefault)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRole/#obj-speccomposites","title":"obj spec.composites","text":""},{"location":"1.15.0/v1/v1/keycloakRealmRole/#fn-speccompositeswithname","title":"fn spec.composites.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/","title":"v1.v1.keycloakRealmRoleBatch","text":"<p>\"KeycloakRealmRoleBatch is the Schema for the keycloak roles API.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> <li><code>obj spec.roles</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withComposite(composite)</code></li> <li><code>fn withComposites(composites)</code></li> <li><code>fn withCompositesMixin(composites)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withIsDefault(isDefault)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.roles.composites</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmRoleBatch</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmRoleBatchSpec defines the desired state of KeycloakRealmRoleBatch.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specwithroles","title":"fn spec.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specwithrolesmixin","title":"fn spec.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#obj-specroles","title":"obj spec.roles","text":""},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithattributes","title":"fn spec.roles.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithattributesmixin","title":"fn spec.roles.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithcomposite","title":"fn spec.roles.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithcomposites","title":"fn spec.roles.withComposites","text":"<pre><code>withComposites(composites)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithcompositesmixin","title":"fn spec.roles.withCompositesMixin","text":"<pre><code>withCompositesMixin(composites)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithdescription","title":"fn spec.roles.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithisdefault","title":"fn spec.roles.withIsDefault","text":"<pre><code>withIsDefault(isDefault)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithname","title":"fn spec.roles.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#obj-specrolescomposites","title":"obj spec.roles.composites","text":""},{"location":"1.15.0/v1/v1/keycloakRealmRoleBatch/#fn-specrolescompositeswithname","title":"fn spec.roles.composites.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/","title":"v1.v1.keycloakRealmUser","text":"<p>\"KeycloakRealmUser is the Schema for the keycloak user API.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withEmail(email)</code></li> <li><code>fn withEmailVerified(emailVerified)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFirstName(firstName)</code></li> <li><code>fn withGroups(groups)</code></li> <li><code>fn withGroupsMixin(groups)</code></li> <li><code>fn withKeepResource(keepResource)</code></li> <li><code>fn withLastName(lastName)</code></li> <li><code>fn withPassword(password)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withReconciliationStrategy(reconciliationStrategy)</code></li> <li><code>fn withRequiredUserActions(requiredUserActions)</code></li> <li><code>fn withRequiredUserActionsMixin(requiredUserActions)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> <li><code>fn withUsername(username)</code></li> </ul>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmUser</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmUserSpec defines the desired state of KeycloakRealmUser.\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithemail","title":"fn spec.withEmail","text":"<pre><code>withEmail(email)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithemailverified","title":"fn spec.withEmailVerified","text":"<pre><code>withEmailVerified(emailVerified)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithenabled","title":"fn spec.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithfirstname","title":"fn spec.withFirstName","text":"<pre><code>withFirstName(firstName)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithgroups","title":"fn spec.withGroups","text":"<pre><code>withGroups(groups)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithgroupsmixin","title":"fn spec.withGroupsMixin","text":"<pre><code>withGroupsMixin(groups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithkeepresource","title":"fn spec.withKeepResource","text":"<pre><code>withKeepResource(keepResource)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithlastname","title":"fn spec.withLastName","text":"<pre><code>withLastName(lastName)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithpassword","title":"fn spec.withPassword","text":"<pre><code>withPassword(password)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithreconciliationstrategy","title":"fn spec.withReconciliationStrategy","text":"<pre><code>withReconciliationStrategy(reconciliationStrategy)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithrequireduseractions","title":"fn spec.withRequiredUserActions","text":"<pre><code>withRequiredUserActions(requiredUserActions)\n</code></pre> <p>\"RequiredUserActions is required action when user log in, example: CONFIGURE_TOTP, UPDATE_PASSWORD, UPDATE_PROFILE, VERIFY_EMAIL\"</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithrequireduseractionsmixin","title":"fn spec.withRequiredUserActionsMixin","text":"<pre><code>withRequiredUserActionsMixin(requiredUserActions)\n</code></pre> <p>\"RequiredUserActions is required action when user log in, example: CONFIGURE_TOTP, UPDATE_PASSWORD, UPDATE_PROFILE, VERIFY_EMAIL\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithroles","title":"fn spec.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithrolesmixin","title":"fn spec.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1/keycloakRealmUser/#fn-specwithusername","title":"fn spec.withUsername","text":"<pre><code>withUsername(username)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/","title":"v1.v1alpha1","text":"<ul> <li>keycloak</li> <li>keycloakAuthFlow</li> <li>keycloakClient</li> <li>keycloakClientScope</li> <li>keycloakRealm</li> <li>keycloakRealmComponent</li> <li>keycloakRealmGroup</li> <li>keycloakRealmIdentityProvider</li> <li>keycloakRealmRole</li> <li>keycloakRealmRoleBatch</li> <li>keycloakRealmUser</li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloak/","title":"v1.v1alpha1.keycloak","text":"<p>\"Keycloak is the Schema for the keycloaks API.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAdminType(adminType)</code></li> <li><code>fn withInstallMainRealm(installMainRealm)</code></li> <li><code>fn withRealmName(realmName)</code></li> <li><code>fn withSecret(secret)</code></li> <li><code>fn withSsoRealmName(ssoRealmName)</code></li> <li><code>fn withUrl(url)</code></li> <li><code>fn withUsers(users)</code></li> <li><code>fn withUsersMixin(users)</code></li> <li><code>obj spec.users</code><ul> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withUsername(username)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Keycloak</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#obj-spec","title":"obj spec","text":"<p>\"KeycloakSpec defines the desired state of Keycloak.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specwithadmintype","title":"fn spec.withAdminType","text":"<pre><code>withAdminType(adminType)\n</code></pre> <p>\"AdminType can be user or serviceAccount, if serviceAccount was specified, then client_credentials grant type should be used for getting admin realm token\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specwithinstallmainrealm","title":"fn spec.withInstallMainRealm","text":"<pre><code>withInstallMainRealm(installMainRealm)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specwithrealmname","title":"fn spec.withRealmName","text":"<pre><code>withRealmName(realmName)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specwithsecret","title":"fn spec.withSecret","text":"<pre><code>withSecret(secret)\n</code></pre> <p>\"Secret is the name of the k8s object Secret related to keycloak\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specwithssorealmname","title":"fn spec.withSsoRealmName","text":"<pre><code>withSsoRealmName(ssoRealmName)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specwithurl","title":"fn spec.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL of keycloak service\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specwithusers","title":"fn spec.withUsers","text":"<pre><code>withUsers(users)\n</code></pre> <p>\"Users is a list of keycloak users\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specwithusersmixin","title":"fn spec.withUsersMixin","text":"<pre><code>withUsersMixin(users)\n</code></pre> <p>\"Users is a list of keycloak users\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#obj-specusers","title":"obj spec.users","text":"<p>\"Users is a list of keycloak users\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specuserswithrealmroles","title":"fn spec.users.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specuserswithrealmrolesmixin","title":"fn spec.users.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloak/#fn-specuserswithusername","title":"fn spec.users.withUsername","text":"<pre><code>withUsername(username)\n</code></pre> <p>\"Username of keycloak user\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/","title":"v1.v1alpha1.keycloakAuthFlow","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticationExecutions(authenticationExecutions)</code></li> <li><code>fn withAuthenticationExecutionsMixin(authenticationExecutions)</code></li> <li><code>fn withBuiltIn(builtIn)</code></li> <li><code>fn withChildType(childType)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withParentName(parentName)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withTopLevel(topLevel)</code></li> <li><code>obj spec.authenticationExecutions</code><ul> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticator(authenticator)</code></li> <li><code>fn withAuthenticatorFlow(authenticatorFlow)</code></li> <li><code>fn withPriority(priority)</code></li> <li><code>fn withRequirement(requirement)</code></li> <li><code>obj spec.authenticationExecutions.authenticatorConfig</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakAuthFlow</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#obj-spec","title":"obj spec","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithalias","title":"fn spec.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre> <p>\"Alias is display name for authentication flow\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithauthenticationexecutions","title":"fn spec.withAuthenticationExecutions","text":"<pre><code>withAuthenticationExecutions(authenticationExecutions)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithauthenticationexecutionsmixin","title":"fn spec.withAuthenticationExecutionsMixin","text":"<pre><code>withAuthenticationExecutionsMixin(authenticationExecutions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithbuiltin","title":"fn spec.withBuiltIn","text":"<pre><code>withBuiltIn(builtIn)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithchildtype","title":"fn spec.withChildType","text":"<pre><code>withChildType(childType)\n</code></pre> <p>\"ChildType is type for auth flow if it has a parent, available options: basic-flow, form-flow\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithparentname","title":"fn spec.withParentName","text":"<pre><code>withParentName(parentName)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre> <p>\"ProviderID for root auth flow and provider for child auth flows\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Realm is name of keycloak realm\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithtoplevel","title":"fn spec.withTopLevel","text":"<pre><code>withTopLevel(topLevel)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#obj-specauthenticationexecutions","title":"obj spec.authenticationExecutions","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionswithalias","title":"fn spec.authenticationExecutions.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionswithauthenticator","title":"fn spec.authenticationExecutions.withAuthenticator","text":"<pre><code>withAuthenticator(authenticator)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionswithauthenticatorflow","title":"fn spec.authenticationExecutions.withAuthenticatorFlow","text":"<pre><code>withAuthenticatorFlow(authenticatorFlow)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionswithpriority","title":"fn spec.authenticationExecutions.withPriority","text":"<pre><code>withPriority(priority)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionswithrequirement","title":"fn spec.authenticationExecutions.withRequirement","text":"<pre><code>withRequirement(requirement)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#obj-specauthenticationexecutionsauthenticatorconfig","title":"obj spec.authenticationExecutions.authenticatorConfig","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithalias","title":"fn spec.authenticationExecutions.authenticatorConfig.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithconfig","title":"fn spec.authenticationExecutions.authenticatorConfig.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithconfigmixin","title":"fn spec.authenticationExecutions.authenticatorConfig.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/","title":"v1.v1alpha1.keycloakClient","text":"<p>\"KeycloakClient is the Schema for the keycloakclients API.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAdvancedProtocolMappers(advancedProtocolMappers)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withDefaultClientScopes(defaultClientScopes)</code></li> <li><code>fn withDefaultClientScopesMixin(defaultClientScopes)</code></li> <li><code>fn withDirectAccess(directAccess)</code></li> <li><code>fn withFrontChannelLogout(frontChannelLogout)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMappers(protocolMappers)</code></li> <li><code>fn withProtocolMappersMixin(protocolMappers)</code></li> <li><code>fn withPublic(public)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withReconciliationStrategy(reconciliationStrategy)</code></li> <li><code>fn withSecret(secret)</code></li> <li><code>fn withTargetRealm(targetRealm)</code></li> <li><code>fn withWebUrl(webUrl)</code></li> <li><code>obj spec.protocolMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMapper(protocolMapper)</code></li> </ul> </li> <li><code>obj spec.realmRoles</code><ul> <li><code>fn withComposite(composite)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.serviceAccount</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>obj spec.serviceAccount.clientRoles</code></li> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakClient</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#obj-spec","title":"obj spec","text":"<p>\"KeycloakClientSpec defines the desired state of KeycloakClient.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithadvancedprotocolmappers","title":"fn spec.withAdvancedProtocolMappers","text":"<pre><code>withAdvancedProtocolMappers(advancedProtocolMappers)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithclientid","title":"fn spec.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre> <p>\"ClientId is a unique keycloak client ID referenced in URI and tokens.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithclientroles","title":"fn spec.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithclientrolesmixin","title":"fn spec.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithdefaultclientscopes","title":"fn spec.withDefaultClientScopes","text":"<pre><code>withDefaultClientScopes(defaultClientScopes)\n</code></pre> <p>\"A list of default client scopes for a keycloak client.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithdefaultclientscopesmixin","title":"fn spec.withDefaultClientScopesMixin","text":"<pre><code>withDefaultClientScopesMixin(defaultClientScopes)\n</code></pre> <p>\"A list of default client scopes for a keycloak client.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithdirectaccess","title":"fn spec.withDirectAccess","text":"<pre><code>withDirectAccess(directAccess)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithfrontchannellogout","title":"fn spec.withFrontChannelLogout","text":"<pre><code>withFrontChannelLogout(frontChannelLogout)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithprotocol","title":"fn spec.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithprotocolmappers","title":"fn spec.withProtocolMappers","text":"<pre><code>withProtocolMappers(protocolMappers)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithprotocolmappersmixin","title":"fn spec.withProtocolMappersMixin","text":"<pre><code>withProtocolMappersMixin(protocolMappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithpublic","title":"fn spec.withPublic","text":"<pre><code>withPublic(public)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithrealmroles","title":"fn spec.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithrealmrolesmixin","title":"fn spec.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithreconciliationstrategy","title":"fn spec.withReconciliationStrategy","text":"<pre><code>withReconciliationStrategy(reconciliationStrategy)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithsecret","title":"fn spec.withSecret","text":"<pre><code>withSecret(secret)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithtargetrealm","title":"fn spec.withTargetRealm","text":"<pre><code>withTargetRealm(targetRealm)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specwithweburl","title":"fn spec.withWebUrl","text":"<pre><code>withWebUrl(webUrl)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#obj-specprotocolmappers","title":"obj spec.protocolMappers","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specprotocolmapperswithconfig","title":"fn spec.protocolMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specprotocolmapperswithconfigmixin","title":"fn spec.protocolMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specprotocolmapperswithname","title":"fn spec.protocolMappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specprotocolmapperswithprotocol","title":"fn spec.protocolMappers.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specprotocolmapperswithprotocolmapper","title":"fn spec.protocolMappers.withProtocolMapper","text":"<pre><code>withProtocolMapper(protocolMapper)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#obj-specrealmroles","title":"obj spec.realmRoles","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specrealmroleswithcomposite","title":"fn spec.realmRoles.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specrealmroleswithname","title":"fn spec.realmRoles.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#obj-specserviceaccount","title":"obj spec.serviceAccount","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithattributes","title":"fn spec.serviceAccount.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithattributesmixin","title":"fn spec.serviceAccount.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithclientroles","title":"fn spec.serviceAccount.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithclientrolesmixin","title":"fn spec.serviceAccount.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithenabled","title":"fn spec.serviceAccount.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithrealmroles","title":"fn spec.serviceAccount.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithrealmrolesmixin","title":"fn spec.serviceAccount.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#obj-specserviceaccountclientroles","title":"obj spec.serviceAccount.clientRoles","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountclientroleswithclientid","title":"fn spec.serviceAccount.clientRoles.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountclientroleswithroles","title":"fn spec.serviceAccount.clientRoles.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountclientroleswithrolesmixin","title":"fn spec.serviceAccount.clientRoles.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/","title":"v1.v1alpha1.keycloakClientScope","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withDefault(default)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMappers(protocolMappers)</code></li> <li><code>fn withProtocolMappersMixin(protocolMappers)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>obj spec.protocolMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMapper(protocolMapper)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakClientScope</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#obj-spec","title":"obj spec","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specwithdefault","title":"fn spec.withDefault","text":"<pre><code>withDefault(default)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of keycloak client scope\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specwithprotocol","title":"fn spec.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is SSO protocol configuration which is being supplied by this client scope\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specwithprotocolmappers","title":"fn spec.withProtocolMappers","text":"<pre><code>withProtocolMappers(protocolMappers)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specwithprotocolmappersmixin","title":"fn spec.withProtocolMappersMixin","text":"<pre><code>withProtocolMappersMixin(protocolMappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Realm is name of keycloak realm\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#obj-specprotocolmappers","title":"obj spec.protocolMappers","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specprotocolmapperswithconfig","title":"fn spec.protocolMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specprotocolmapperswithconfigmixin","title":"fn spec.protocolMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specprotocolmapperswithname","title":"fn spec.protocolMappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specprotocolmapperswithprotocol","title":"fn spec.protocolMappers.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakClientScope/#fn-specprotocolmapperswithprotocolmapper","title":"fn spec.protocolMappers.withProtocolMapper","text":"<pre><code>withProtocolMapper(protocolMapper)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/","title":"v1.v1alpha1.keycloakRealm","text":"<p>\"KeycloakRealm is the Schema for the keycloakrealms API.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withBrowserFlow(browserFlow)</code></li> <li><code>fn withBrowserSecurityHeaders(browserSecurityHeaders)</code></li> <li><code>fn withBrowserSecurityHeadersMixin(browserSecurityHeaders)</code></li> <li><code>fn withDisableCentralIDPMappers(disableCentralIDPMappers)</code></li> <li><code>fn withId(id)</code></li> <li><code>fn withKeycloakOwner(keycloakOwner)</code></li> <li><code>fn withPasswordPolicy(passwordPolicy)</code></li> <li><code>fn withPasswordPolicyMixin(passwordPolicy)</code></li> <li><code>fn withRealmName(realmName)</code></li> <li><code>fn withSsoAutoRedirectEnabled(ssoAutoRedirectEnabled)</code></li> <li><code>fn withSsoRealmEnabled(ssoRealmEnabled)</code></li> <li><code>fn withSsoRealmMappers(ssoRealmMappers)</code></li> <li><code>fn withSsoRealmMappersMixin(ssoRealmMappers)</code></li> <li><code>fn withSsoRealmName(ssoRealmName)</code></li> <li><code>fn withUsers(users)</code></li> <li><code>fn withUsersMixin(users)</code></li> <li><code>obj spec.passwordPolicy</code><ul> <li><code>fn withType(type)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.realmEventConfig</code><ul> <li><code>fn withAdminEventsDetailsEnabled(adminEventsDetailsEnabled)</code></li> <li><code>fn withAdminEventsEnabled(adminEventsEnabled)</code></li> <li><code>fn withEnabledEventTypes(enabledEventTypes)</code></li> <li><code>fn withEnabledEventTypesMixin(enabledEventTypes)</code></li> <li><code>fn withEventsEnabled(eventsEnabled)</code></li> <li><code>fn withEventsExpiration(eventsExpiration)</code></li> <li><code>fn withEventsListeners(eventsListeners)</code></li> <li><code>fn withEventsListenersMixin(eventsListeners)</code></li> </ul> </li> <li><code>obj spec.ssoRealmMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withIdentityProviderMapper(identityProviderMapper)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.themes</code><ul> <li><code>fn withAccountTheme(accountTheme)</code></li> <li><code>fn withAdminConsoleTheme(adminConsoleTheme)</code></li> <li><code>fn withEmailTheme(emailTheme)</code></li> <li><code>fn withInternationalizationEnabled(internationalizationEnabled)</code></li> <li><code>fn withLoginTheme(loginTheme)</code></li> </ul> </li> <li><code>obj spec.users</code><ul> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withUsername(username)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealm</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmSpec defines the desired state of KeycloakRealm.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithbrowserflow","title":"fn spec.withBrowserFlow","text":"<pre><code>withBrowserFlow(browserFlow)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithbrowsersecurityheaders","title":"fn spec.withBrowserSecurityHeaders","text":"<pre><code>withBrowserSecurityHeaders(browserSecurityHeaders)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithbrowsersecurityheadersmixin","title":"fn spec.withBrowserSecurityHeadersMixin","text":"<pre><code>withBrowserSecurityHeadersMixin(browserSecurityHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithdisablecentralidpmappers","title":"fn spec.withDisableCentralIDPMappers","text":"<pre><code>withDisableCentralIDPMappers(disableCentralIDPMappers)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithid","title":"fn spec.withId","text":"<pre><code>withId(id)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithkeycloakowner","title":"fn spec.withKeycloakOwner","text":"<pre><code>withKeycloakOwner(keycloakOwner)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithpasswordpolicy","title":"fn spec.withPasswordPolicy","text":"<pre><code>withPasswordPolicy(passwordPolicy)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithpasswordpolicymixin","title":"fn spec.withPasswordPolicyMixin","text":"<pre><code>withPasswordPolicyMixin(passwordPolicy)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithrealmname","title":"fn spec.withRealmName","text":"<pre><code>withRealmName(realmName)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithssoautoredirectenabled","title":"fn spec.withSsoAutoRedirectEnabled","text":"<pre><code>withSsoAutoRedirectEnabled(ssoAutoRedirectEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithssorealmenabled","title":"fn spec.withSsoRealmEnabled","text":"<pre><code>withSsoRealmEnabled(ssoRealmEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithssorealmmappers","title":"fn spec.withSsoRealmMappers","text":"<pre><code>withSsoRealmMappers(ssoRealmMappers)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithssorealmmappersmixin","title":"fn spec.withSsoRealmMappersMixin","text":"<pre><code>withSsoRealmMappersMixin(ssoRealmMappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithssorealmname","title":"fn spec.withSsoRealmName","text":"<pre><code>withSsoRealmName(ssoRealmName)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithusers","title":"fn spec.withUsers","text":"<pre><code>withUsers(users)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specwithusersmixin","title":"fn spec.withUsersMixin","text":"<pre><code>withUsersMixin(users)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#obj-specpasswordpolicy","title":"obj spec.passwordPolicy","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specpasswordpolicywithtype","title":"fn spec.passwordPolicy.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specpasswordpolicywithvalue","title":"fn spec.passwordPolicy.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#obj-specrealmeventconfig","title":"obj spec.realmEventConfig","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwithadmineventsdetailsenabled","title":"fn spec.realmEventConfig.withAdminEventsDetailsEnabled","text":"<pre><code>withAdminEventsDetailsEnabled(adminEventsDetailsEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwithadmineventsenabled","title":"fn spec.realmEventConfig.withAdminEventsEnabled","text":"<pre><code>withAdminEventsEnabled(adminEventsEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwithenabledeventtypes","title":"fn spec.realmEventConfig.withEnabledEventTypes","text":"<pre><code>withEnabledEventTypes(enabledEventTypes)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwithenabledeventtypesmixin","title":"fn spec.realmEventConfig.withEnabledEventTypesMixin","text":"<pre><code>withEnabledEventTypesMixin(enabledEventTypes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwitheventsenabled","title":"fn spec.realmEventConfig.withEventsEnabled","text":"<pre><code>withEventsEnabled(eventsEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwitheventsexpiration","title":"fn spec.realmEventConfig.withEventsExpiration","text":"<pre><code>withEventsExpiration(eventsExpiration)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwitheventslisteners","title":"fn spec.realmEventConfig.withEventsListeners","text":"<pre><code>withEventsListeners(eventsListeners)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwitheventslistenersmixin","title":"fn spec.realmEventConfig.withEventsListenersMixin","text":"<pre><code>withEventsListenersMixin(eventsListeners)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#obj-specssorealmmappers","title":"obj spec.ssoRealmMappers","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specssorealmmapperswithconfig","title":"fn spec.ssoRealmMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specssorealmmapperswithconfigmixin","title":"fn spec.ssoRealmMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specssorealmmapperswithidentityprovidermapper","title":"fn spec.ssoRealmMappers.withIdentityProviderMapper","text":"<pre><code>withIdentityProviderMapper(identityProviderMapper)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specssorealmmapperswithname","title":"fn spec.ssoRealmMappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#obj-specthemes","title":"obj spec.themes","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specthemeswithaccounttheme","title":"fn spec.themes.withAccountTheme","text":"<pre><code>withAccountTheme(accountTheme)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specthemeswithadminconsoletheme","title":"fn spec.themes.withAdminConsoleTheme","text":"<pre><code>withAdminConsoleTheme(adminConsoleTheme)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specthemeswithemailtheme","title":"fn spec.themes.withEmailTheme","text":"<pre><code>withEmailTheme(emailTheme)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specthemeswithinternationalizationenabled","title":"fn spec.themes.withInternationalizationEnabled","text":"<pre><code>withInternationalizationEnabled(internationalizationEnabled)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specthemeswithlogintheme","title":"fn spec.themes.withLoginTheme","text":"<pre><code>withLoginTheme(loginTheme)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#obj-specusers","title":"obj spec.users","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specuserswithrealmroles","title":"fn spec.users.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specuserswithrealmrolesmixin","title":"fn spec.users.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealm/#fn-specuserswithusername","title":"fn spec.users.withUsername","text":"<pre><code>withUsername(username)\n</code></pre> <p>\"Username of keycloak user\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/","title":"v1.v1alpha1.keycloakRealmComponent","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withProviderType(providerType)</code></li> <li><code>fn withRealm(realm)</code></li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmComponent</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#obj-spec","title":"obj spec","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithconfig","title":"fn spec.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithconfigmixin","title":"fn spec.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithprovidertype","title":"fn spec.withProviderType","text":"<pre><code>withProviderType(providerType)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/","title":"v1.v1alpha1.keycloakRealmGroup","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAccess(access)</code></li> <li><code>fn withAccessMixin(access)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withSubGroups(subGroups)</code></li> <li><code>fn withSubGroupsMixin(subGroups)</code></li> <li><code>obj spec.clientRoles</code><ul> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmGroup</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#obj-spec","title":"obj spec","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithaccess","title":"fn spec.withAccess","text":"<pre><code>withAccess(access)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithaccessmixin","title":"fn spec.withAccessMixin","text":"<pre><code>withAccessMixin(access)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithclientroles","title":"fn spec.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithclientrolesmixin","title":"fn spec.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithpath","title":"fn spec.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithrealmroles","title":"fn spec.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithrealmrolesmixin","title":"fn spec.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithsubgroups","title":"fn spec.withSubGroups","text":"<pre><code>withSubGroups(subGroups)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithsubgroupsmixin","title":"fn spec.withSubGroupsMixin","text":"<pre><code>withSubGroupsMixin(subGroups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#obj-specclientroles","title":"obj spec.clientRoles","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specclientroleswithclientid","title":"fn spec.clientRoles.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specclientroleswithroles","title":"fn spec.clientRoles.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmGroup/#fn-specclientroleswithrolesmixin","title":"fn spec.clientRoles.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/","title":"v1.v1alpha1.keycloakRealmIdentityProvider","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddReadTokenRoleOnCreate(addReadTokenRoleOnCreate)</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticateByDefault(authenticateByDefault)</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withDisplayName(displayName)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFirstBrokerLoginFlowAlias(firstBrokerLoginFlowAlias)</code></li> <li><code>fn withLinkOnly(linkOnly)</code></li> <li><code>fn withMappers(mappers)</code></li> <li><code>fn withMappersMixin(mappers)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withStoreToken(storeToken)</code></li> <li><code>fn withTrustEmail(trustEmail)</code></li> <li><code>obj spec.mappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withIdentityProviderAlias(identityProviderAlias)</code></li> <li><code>fn withIdentityProviderMapper(identityProviderMapper)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmIdentityProvider</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#obj-spec","title":"obj spec","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithaddreadtokenroleoncreate","title":"fn spec.withAddReadTokenRoleOnCreate","text":"<pre><code>withAddReadTokenRoleOnCreate(addReadTokenRoleOnCreate)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithalias","title":"fn spec.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithauthenticatebydefault","title":"fn spec.withAuthenticateByDefault","text":"<pre><code>withAuthenticateByDefault(authenticateByDefault)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithconfig","title":"fn spec.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithconfigmixin","title":"fn spec.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithdisplayname","title":"fn spec.withDisplayName","text":"<pre><code>withDisplayName(displayName)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithenabled","title":"fn spec.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithfirstbrokerloginflowalias","title":"fn spec.withFirstBrokerLoginFlowAlias","text":"<pre><code>withFirstBrokerLoginFlowAlias(firstBrokerLoginFlowAlias)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithlinkonly","title":"fn spec.withLinkOnly","text":"<pre><code>withLinkOnly(linkOnly)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithmappers","title":"fn spec.withMappers","text":"<pre><code>withMappers(mappers)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithmappersmixin","title":"fn spec.withMappersMixin","text":"<pre><code>withMappersMixin(mappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithstoretoken","title":"fn spec.withStoreToken","text":"<pre><code>withStoreToken(storeToken)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithtrustemail","title":"fn spec.withTrustEmail","text":"<pre><code>withTrustEmail(trustEmail)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#obj-specmappers","title":"obj spec.mappers","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specmapperswithconfig","title":"fn spec.mappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specmapperswithconfigmixin","title":"fn spec.mappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specmapperswithidentityprovideralias","title":"fn spec.mappers.withIdentityProviderAlias","text":"<pre><code>withIdentityProviderAlias(identityProviderAlias)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specmapperswithidentityprovidermapper","title":"fn spec.mappers.withIdentityProviderMapper","text":"<pre><code>withIdentityProviderMapper(identityProviderMapper)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specmapperswithname","title":"fn spec.mappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/","title":"v1.v1alpha1.keycloakRealmRole","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withComposite(composite)</code></li> <li><code>fn withComposites(composites)</code></li> <li><code>fn withCompositesMixin(composites)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withIsDefault(isDefault)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>obj spec.composites</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmRole</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#obj-spec","title":"obj spec","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithcomposite","title":"fn spec.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithcomposites","title":"fn spec.withComposites","text":"<pre><code>withComposites(composites)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithcompositesmixin","title":"fn spec.withCompositesMixin","text":"<pre><code>withCompositesMixin(composites)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithisdefault","title":"fn spec.withIsDefault","text":"<pre><code>withIsDefault(isDefault)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#obj-speccomposites","title":"obj spec.composites","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRole/#fn-speccompositeswithname","title":"fn spec.composites.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/","title":"v1.v1alpha1.keycloakRealmRoleBatch","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> <li><code>obj spec.roles</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withComposite(composite)</code></li> <li><code>fn withComposites(composites)</code></li> <li><code>fn withCompositesMixin(composites)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withIsDefault(isDefault)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.roles.composites</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmRoleBatch</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#obj-spec","title":"obj spec","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specwithroles","title":"fn spec.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specwithrolesmixin","title":"fn spec.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#obj-specroles","title":"obj spec.roles","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithattributes","title":"fn spec.roles.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithattributesmixin","title":"fn spec.roles.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithcomposite","title":"fn spec.roles.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithcomposites","title":"fn spec.roles.withComposites","text":"<pre><code>withComposites(composites)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithcompositesmixin","title":"fn spec.roles.withCompositesMixin","text":"<pre><code>withCompositesMixin(composites)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithdescription","title":"fn spec.roles.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithisdefault","title":"fn spec.roles.withIsDefault","text":"<pre><code>withIsDefault(isDefault)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithname","title":"fn spec.roles.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#obj-specrolescomposites","title":"obj spec.roles.composites","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specrolescompositeswithname","title":"fn spec.roles.composites.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/","title":"v1.v1alpha1.keycloakRealmUser","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withEmail(email)</code></li> <li><code>fn withEmailVerified(emailVerified)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFirstName(firstName)</code></li> <li><code>fn withGroups(groups)</code></li> <li><code>fn withGroupsMixin(groups)</code></li> <li><code>fn withKeepResource(keepResource)</code></li> <li><code>fn withLastName(lastName)</code></li> <li><code>fn withPassword(password)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withReconciliationStrategy(reconciliationStrategy)</code></li> <li><code>fn withRequiredUserActions(requiredUserActions)</code></li> <li><code>fn withRequiredUserActionsMixin(requiredUserActions)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> <li><code>fn withUsername(username)</code></li> </ul>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fields","title":"Fields","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmUser</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#obj-spec","title":"obj spec","text":""},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithemail","title":"fn spec.withEmail","text":"<pre><code>withEmail(email)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithemailverified","title":"fn spec.withEmailVerified","text":"<pre><code>withEmailVerified(emailVerified)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithenabled","title":"fn spec.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithfirstname","title":"fn spec.withFirstName","text":"<pre><code>withFirstName(firstName)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithgroups","title":"fn spec.withGroups","text":"<pre><code>withGroups(groups)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithgroupsmixin","title":"fn spec.withGroupsMixin","text":"<pre><code>withGroupsMixin(groups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithkeepresource","title":"fn spec.withKeepResource","text":"<pre><code>withKeepResource(keepResource)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithlastname","title":"fn spec.withLastName","text":"<pre><code>withLastName(lastName)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithpassword","title":"fn spec.withPassword","text":"<pre><code>withPassword(password)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithreconciliationstrategy","title":"fn spec.withReconciliationStrategy","text":"<pre><code>withReconciliationStrategy(reconciliationStrategy)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithrequireduseractions","title":"fn spec.withRequiredUserActions","text":"<pre><code>withRequiredUserActions(requiredUserActions)\n</code></pre> <p>\"RequiredUserActions is required action when user log in, example: CONFIGURE_TOTP, UPDATE_PASSWORD, UPDATE_PROFILE, VERIFY_EMAIL\"</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithrequireduseractionsmixin","title":"fn spec.withRequiredUserActionsMixin","text":"<pre><code>withRequiredUserActionsMixin(requiredUserActions)\n</code></pre> <p>\"RequiredUserActions is required action when user log in, example: CONFIGURE_TOTP, UPDATE_PASSWORD, UPDATE_PROFILE, VERIFY_EMAIL\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithroles","title":"fn spec.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithrolesmixin","title":"fn spec.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.15.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithusername","title":"fn spec.withUsername","text":"<pre><code>withUsername(username)\n</code></pre>"},{"location":"1.17.0/","title":"edp-keycloak-operator","text":"<pre><code>local edp-keycloak-operator = import \"github.com/jsonnet-libs/edp-keycloak-operator-libsonnet/1.17.0/main.libsonnet\"\n</code></pre> <ul> <li>v1</li> </ul>"},{"location":"1.17.0/v1/","title":"v1","text":"<ul> <li>v1</li> <li>v1alpha1</li> </ul>"},{"location":"1.17.0/v1/v1/","title":"v1.v1","text":"<ul> <li>keycloak</li> <li>keycloakAuthFlow</li> <li>keycloakClient</li> <li>keycloakClientScope</li> <li>keycloakRealm</li> <li>keycloakRealmComponent</li> <li>keycloakRealmGroup</li> <li>keycloakRealmIdentityProvider</li> <li>keycloakRealmRole</li> <li>keycloakRealmRoleBatch</li> <li>keycloakRealmUser</li> </ul>"},{"location":"1.17.0/v1/v1/keycloak/","title":"v1.v1.keycloak","text":"<p>\"Keycloak is the Schema for the keycloaks API.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAdminType(adminType)</code></li> <li><code>fn withSecret(secret)</code></li> <li><code>fn withUrl(url)</code></li> </ul>"},{"location":"1.17.0/v1/v1/keycloak/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloak/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Keycloak</p>"},{"location":"1.17.0/v1/v1/keycloak/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#obj-spec","title":"obj spec","text":"<p>\"KeycloakSpec defines the desired state of Keycloak.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-specwithadmintype","title":"fn spec.withAdminType","text":"<pre><code>withAdminType(adminType)\n</code></pre> <p>\"AdminType can be user or serviceAccount, if serviceAccount was specified, then client_credentials grant type should be used for getting admin realm token.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-specwithsecret","title":"fn spec.withSecret","text":"<pre><code>withSecret(secret)\n</code></pre> <p>\"Secret is a secret name which contains admin credentials.\"</p>"},{"location":"1.17.0/v1/v1/keycloak/#fn-specwithurl","title":"fn spec.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL of keycloak service.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/","title":"v1.v1.keycloakAuthFlow","text":"<p>\"KeycloakAuthFlow is the Schema for the keycloak authentication flow API.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticationExecutions(authenticationExecutions)</code></li> <li><code>fn withAuthenticationExecutionsMixin(authenticationExecutions)</code></li> <li><code>fn withBuiltIn(builtIn)</code></li> <li><code>fn withChildType(childType)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withParentName(parentName)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withTopLevel(topLevel)</code></li> <li><code>obj spec.authenticationExecutions</code><ul> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticator(authenticator)</code></li> <li><code>fn withAuthenticatorFlow(authenticatorFlow)</code></li> <li><code>fn withPriority(priority)</code></li> <li><code>fn withRequirement(requirement)</code></li> <li><code>obj spec.authenticationExecutions.authenticatorConfig</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> </ul> </li> <li><code>obj spec.realmRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakAuthFlow</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#obj-spec","title":"obj spec","text":"<p>\"KeycloakAuthFlowSpec defines the desired state of KeycloakAuthFlow.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specwithalias","title":"fn spec.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre> <p>\"Alias is display name for authentication flow.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specwithauthenticationexecutions","title":"fn spec.withAuthenticationExecutions","text":"<pre><code>withAuthenticationExecutions(authenticationExecutions)\n</code></pre> <p>\"AuthenticationExecutions is list of authentication executions for this auth flow.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specwithauthenticationexecutionsmixin","title":"fn spec.withAuthenticationExecutionsMixin","text":"<pre><code>withAuthenticationExecutionsMixin(authenticationExecutions)\n</code></pre> <p>\"AuthenticationExecutions is list of authentication executions for this auth flow.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specwithbuiltin","title":"fn spec.withBuiltIn","text":"<pre><code>withBuiltIn(builtIn)\n</code></pre> <p>\"BuiltIn is true if this is built-in auth flow.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specwithchildtype","title":"fn spec.withChildType","text":"<pre><code>withChildType(childType)\n</code></pre> <p>\"ChildType is type for auth flow if it has a parent, available options: basic-flow, form-flow\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description is description for authentication flow.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specwithparentname","title":"fn spec.withParentName","text":"<pre><code>withParentName(parentName)\n</code></pre> <p>\"ParentName is name of parent auth flow.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre> <p>\"ProviderID for root auth flow and provider for child auth flows.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Deprecated: use RealmRef instead. Realm is name of KeycloakRealm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specwithtoplevel","title":"fn spec.withTopLevel","text":"<pre><code>withTopLevel(topLevel)\n</code></pre> <p>\"TopLevel is true if this is root auth flow.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#obj-specauthenticationexecutions","title":"obj spec.authenticationExecutions","text":"<p>\"AuthenticationExecutions is list of authentication executions for this auth flow.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionswithalias","title":"fn spec.authenticationExecutions.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre> <p>\"Alias is display name for this execution.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionswithauthenticator","title":"fn spec.authenticationExecutions.withAuthenticator","text":"<pre><code>withAuthenticator(authenticator)\n</code></pre> <p>\"Authenticator is name of authenticator.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionswithauthenticatorflow","title":"fn spec.authenticationExecutions.withAuthenticatorFlow","text":"<pre><code>withAuthenticatorFlow(authenticatorFlow)\n</code></pre> <p>\"AuthenticatorFlow is true if this is auth flow.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionswithpriority","title":"fn spec.authenticationExecutions.withPriority","text":"<pre><code>withPriority(priority)\n</code></pre> <p>\"Priority is priority for this execution. Lower values have higher priority.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionswithrequirement","title":"fn spec.authenticationExecutions.withRequirement","text":"<pre><code>withRequirement(requirement)\n</code></pre> <p>\"Requirement is requirement for this execution. Available options: REQUIRED, ALTERNATIVE, DISABLED, CONDITIONAL.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#obj-specauthenticationexecutionsauthenticatorconfig","title":"obj spec.authenticationExecutions.authenticatorConfig","text":"<p>\"AuthenticatorConfig is configuration for authenticator.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithalias","title":"fn spec.authenticationExecutions.authenticatorConfig.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre> <p>\"Alias is display name for authenticator config.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithconfig","title":"fn spec.authenticationExecutions.authenticatorConfig.withConfig","text":"<pre><code>withConfig(config)\n</code></pre> <p>\"Config is configuration for authenticator.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithconfigmixin","title":"fn spec.authenticationExecutions.authenticatorConfig.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>\"Config is configuration for authenticator.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#obj-specrealmref","title":"obj spec.realmRef","text":"<p>\"RealmRef is reference to Realm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specrealmrefwithkind","title":"fn spec.realmRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind specifies the kind of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakAuthFlow/#fn-specrealmrefwithname","title":"fn spec.realmRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/","title":"v1.v1.keycloakClient","text":"<p>\"KeycloakClient is the Schema for the keycloak clients API.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAdvancedProtocolMappers(advancedProtocolMappers)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withDefaultClientScopes(defaultClientScopes)</code></li> <li><code>fn withDefaultClientScopesMixin(defaultClientScopes)</code></li> <li><code>fn withDirectAccess(directAccess)</code></li> <li><code>fn withFrontChannelLogout(frontChannelLogout)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMappers(protocolMappers)</code></li> <li><code>fn withProtocolMappersMixin(protocolMappers)</code></li> <li><code>fn withPublic(public)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withReconciliationStrategy(reconciliationStrategy)</code></li> <li><code>fn withSecret(secret)</code></li> <li><code>fn withTargetRealm(targetRealm)</code></li> <li><code>fn withWebUrl(webUrl)</code></li> <li><code>obj spec.protocolMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMapper(protocolMapper)</code></li> </ul> </li> <li><code>obj spec.realmRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.realmRoles</code><ul> <li><code>fn withComposite(composite)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.serviceAccount</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>obj spec.serviceAccount.clientRoles</code></li> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1/keycloakClient/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloakClient/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakClient</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#obj-spec","title":"obj spec","text":"<p>\"KeycloakClientSpec defines the desired state of KeycloakClient.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithadvancedprotocolmappers","title":"fn spec.withAdvancedProtocolMappers","text":"<pre><code>withAdvancedProtocolMappers(advancedProtocolMappers)\n</code></pre> <p>\"AdvancedProtocolMappers is a flag to enable advanced protocol mappers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes is a map of client attributes.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes is a map of client attributes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithclientid","title":"fn spec.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre> <p>\"ClientId is a unique keycloak client ID referenced in URI and tokens.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithclientroles","title":"fn spec.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre> <p>\"ClientRoles is a list of client roles names assigned to client.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithclientrolesmixin","title":"fn spec.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>\"ClientRoles is a list of client roles names assigned to client.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithdefaultclientscopes","title":"fn spec.withDefaultClientScopes","text":"<pre><code>withDefaultClientScopes(defaultClientScopes)\n</code></pre> <p>\"DefaultClientScopes is a list of default client scopes assigned to client.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithdefaultclientscopesmixin","title":"fn spec.withDefaultClientScopesMixin","text":"<pre><code>withDefaultClientScopesMixin(defaultClientScopes)\n</code></pre> <p>\"DefaultClientScopes is a list of default client scopes assigned to client.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithdirectaccess","title":"fn spec.withDirectAccess","text":"<pre><code>withDirectAccess(directAccess)\n</code></pre> <p>\"DirectAccess is a flag to set client as direct access.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithfrontchannellogout","title":"fn spec.withFrontChannelLogout","text":"<pre><code>withFrontChannelLogout(frontChannelLogout)\n</code></pre> <p>\"FrontChannelLogout is a flag to enable front channel logout.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithprotocol","title":"fn spec.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is a client protocol.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithprotocolmappers","title":"fn spec.withProtocolMappers","text":"<pre><code>withProtocolMappers(protocolMappers)\n</code></pre> <p>\"ProtocolMappers is a list of protocol mappers assigned to client.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithprotocolmappersmixin","title":"fn spec.withProtocolMappersMixin","text":"<pre><code>withProtocolMappersMixin(protocolMappers)\n</code></pre> <p>\"ProtocolMappers is a list of protocol mappers assigned to client.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithpublic","title":"fn spec.withPublic","text":"<pre><code>withPublic(public)\n</code></pre> <p>\"Public is a flag to set client as public.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithrealmroles","title":"fn spec.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of realm roles assigned to client.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithrealmrolesmixin","title":"fn spec.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of realm roles assigned to client.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithreconciliationstrategy","title":"fn spec.withReconciliationStrategy","text":"<pre><code>withReconciliationStrategy(reconciliationStrategy)\n</code></pre> <p>\"ReconciliationStrategy is a strategy to reconcile client.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithsecret","title":"fn spec.withSecret","text":"<pre><code>withSecret(secret)\n</code></pre> <p>\"Secret is a client secret used for authentication. If not provided, it will be generated.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithtargetrealm","title":"fn spec.withTargetRealm","text":"<pre><code>withTargetRealm(targetRealm)\n</code></pre> <p>\"Deprecated: use RealmRef instead. TargetRealm is a realm name where client will be created. It has higher priority than RealmRef for backward compatibility. If both TargetRealm and RealmRef are specified, TargetRealm will be used for client creation.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specwithweburl","title":"fn spec.withWebUrl","text":"<pre><code>withWebUrl(webUrl)\n</code></pre> <p>\"WebUrl is a client web url.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#obj-specprotocolmappers","title":"obj spec.protocolMappers","text":"<p>\"ProtocolMappers is a list of protocol mappers assigned to client.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specprotocolmapperswithconfig","title":"fn spec.protocolMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre> <p>\"Config is a map of protocol mapper configuration.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specprotocolmapperswithconfigmixin","title":"fn spec.protocolMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>\"Config is a map of protocol mapper configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specprotocolmapperswithname","title":"fn spec.protocolMappers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is a protocol mapper name.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specprotocolmapperswithprotocol","title":"fn spec.protocolMappers.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is a protocol name.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specprotocolmapperswithprotocolmapper","title":"fn spec.protocolMappers.withProtocolMapper","text":"<pre><code>withProtocolMapper(protocolMapper)\n</code></pre> <p>\"ProtocolMapper is a protocol mapper name.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#obj-specrealmref","title":"obj spec.realmRef","text":"<p>\"RealmRef is reference to Realm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specrealmrefwithkind","title":"fn spec.realmRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind specifies the kind of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specrealmrefwithname","title":"fn spec.realmRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#obj-specrealmroles","title":"obj spec.realmRoles","text":"<p>\"RealmRoles is a list of realm roles assigned to client.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specrealmroleswithcomposite","title":"fn spec.realmRoles.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre> <p>\"Composite is a realm composite role name.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specrealmroleswithname","title":"fn spec.realmRoles.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is a realm role name.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#obj-specserviceaccount","title":"obj spec.serviceAccount","text":"<p>\"ServiceAccount is a service account configuration.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specserviceaccountwithattributes","title":"fn spec.serviceAccount.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes is a map of service account attributes.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specserviceaccountwithattributesmixin","title":"fn spec.serviceAccount.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes is a map of service account attributes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specserviceaccountwithclientroles","title":"fn spec.serviceAccount.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre> <p>\"ClientRoles is a list of client roles assigned to service account.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specserviceaccountwithclientrolesmixin","title":"fn spec.serviceAccount.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>\"ClientRoles is a list of client roles assigned to service account.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specserviceaccountwithenabled","title":"fn spec.serviceAccount.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"Enabled is a flag to enable service account.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specserviceaccountwithrealmroles","title":"fn spec.serviceAccount.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of realm roles assigned to service account.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specserviceaccountwithrealmrolesmixin","title":"fn spec.serviceAccount.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of realm roles assigned to service account.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#obj-specserviceaccountclientroles","title":"obj spec.serviceAccount.clientRoles","text":"<p>\"ClientRoles is a list of client roles assigned to service account.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specserviceaccountclientroleswithclientid","title":"fn spec.serviceAccount.clientRoles.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre> <p>\"ClientID is a client ID.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specserviceaccountclientroleswithroles","title":"fn spec.serviceAccount.clientRoles.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre> <p>\"Roles is a list of client roles names assigned to service account.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClient/#fn-specserviceaccountclientroleswithrolesmixin","title":"fn spec.serviceAccount.clientRoles.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>\"Roles is a list of client roles names assigned to service account.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/","title":"v1.v1.keycloakClientScope","text":"<p>\"KeycloakClientScope is the Schema for the keycloakclientscopes API.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withDefault(default)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMappers(protocolMappers)</code></li> <li><code>fn withProtocolMappersMixin(protocolMappers)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>obj spec.protocolMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMapper(protocolMapper)</code></li> </ul> </li> <li><code>obj spec.realmRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakClientScope</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#obj-spec","title":"obj spec","text":"<p>\"KeycloakClientScopeSpec defines the desired state of KeycloakClientScope.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes is a map of client scope attributes.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes is a map of client scope attributes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specwithdefault","title":"fn spec.withDefault","text":"<pre><code>withDefault(default)\n</code></pre> <p>\"Default is a flag to set client scope as default.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description is a description of client scope.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of keycloak client scope.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specwithprotocol","title":"fn spec.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is SSO protocol configuration which is being supplied by this client scope.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specwithprotocolmappers","title":"fn spec.withProtocolMappers","text":"<pre><code>withProtocolMappers(protocolMappers)\n</code></pre> <p>\"ProtocolMappers is a list of protocol mappers assigned to client scope.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specwithprotocolmappersmixin","title":"fn spec.withProtocolMappersMixin","text":"<pre><code>withProtocolMappersMixin(protocolMappers)\n</code></pre> <p>\"ProtocolMappers is a list of protocol mappers assigned to client scope.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Deprecated: use RealmRef instead. Realm is name of KeycloakRealm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#obj-specprotocolmappers","title":"obj spec.protocolMappers","text":"<p>\"ProtocolMappers is a list of protocol mappers assigned to client scope.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specprotocolmapperswithconfig","title":"fn spec.protocolMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre> <p>\"Config is a map of protocol mapper configuration.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specprotocolmapperswithconfigmixin","title":"fn spec.protocolMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>\"Config is a map of protocol mapper configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specprotocolmapperswithname","title":"fn spec.protocolMappers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is a protocol mapper name.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specprotocolmapperswithprotocol","title":"fn spec.protocolMappers.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is a protocol name.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specprotocolmapperswithprotocolmapper","title":"fn spec.protocolMappers.withProtocolMapper","text":"<pre><code>withProtocolMapper(protocolMapper)\n</code></pre> <p>\"ProtocolMapper is a protocol mapper name.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#obj-specrealmref","title":"obj spec.realmRef","text":"<p>\"RealmRef is reference to Realm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specrealmrefwithkind","title":"fn spec.realmRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind specifies the kind of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakClientScope/#fn-specrealmrefwithname","title":"fn spec.realmRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/","title":"v1.v1.keycloakRealm","text":"<p>\"KeycloakRealm is the Schema for the keycloak realms API.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withBrowserFlow(browserFlow)</code></li> <li><code>fn withBrowserSecurityHeaders(browserSecurityHeaders)</code></li> <li><code>fn withBrowserSecurityHeadersMixin(browserSecurityHeaders)</code></li> <li><code>fn withDisableCentralIDPMappers(disableCentralIDPMappers)</code></li> <li><code>fn withFrontendUrl(frontendUrl)</code></li> <li><code>fn withId(id)</code></li> <li><code>fn withKeycloakOwner(keycloakOwner)</code></li> <li><code>fn withPasswordPolicy(passwordPolicy)</code></li> <li><code>fn withPasswordPolicyMixin(passwordPolicy)</code></li> <li><code>fn withRealmName(realmName)</code></li> <li><code>fn withSsoAutoRedirectEnabled(ssoAutoRedirectEnabled)</code></li> <li><code>fn withSsoRealmEnabled(ssoRealmEnabled)</code></li> <li><code>fn withSsoRealmMappers(ssoRealmMappers)</code></li> <li><code>fn withSsoRealmMappersMixin(ssoRealmMappers)</code></li> <li><code>fn withSsoRealmName(ssoRealmName)</code></li> <li><code>fn withUsers(users)</code></li> <li><code>fn withUsersMixin(users)</code></li> <li><code>obj spec.keycloakRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.passwordPolicy</code><ul> <li><code>fn withType(type)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.realmEventConfig</code><ul> <li><code>fn withAdminEventsDetailsEnabled(adminEventsDetailsEnabled)</code></li> <li><code>fn withAdminEventsEnabled(adminEventsEnabled)</code></li> <li><code>fn withEnabledEventTypes(enabledEventTypes)</code></li> <li><code>fn withEnabledEventTypesMixin(enabledEventTypes)</code></li> <li><code>fn withEventsEnabled(eventsEnabled)</code></li> <li><code>fn withEventsExpiration(eventsExpiration)</code></li> <li><code>fn withEventsListeners(eventsListeners)</code></li> <li><code>fn withEventsListenersMixin(eventsListeners)</code></li> </ul> </li> <li><code>obj spec.ssoRealmMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withIdentityProviderMapper(identityProviderMapper)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.themes</code><ul> <li><code>fn withAccountTheme(accountTheme)</code></li> <li><code>fn withAdminConsoleTheme(adminConsoleTheme)</code></li> <li><code>fn withEmailTheme(emailTheme)</code></li> <li><code>fn withInternationalizationEnabled(internationalizationEnabled)</code></li> <li><code>fn withLoginTheme(loginTheme)</code></li> </ul> </li> <li><code>obj spec.users</code><ul> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withUsername(username)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealm</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmSpec defines the desired state of KeycloakRealm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithbrowserflow","title":"fn spec.withBrowserFlow","text":"<pre><code>withBrowserFlow(browserFlow)\n</code></pre> <p>\"BrowserFlow specifies the authentication flow to use for the realm's browser clients.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithbrowsersecurityheaders","title":"fn spec.withBrowserSecurityHeaders","text":"<pre><code>withBrowserSecurityHeaders(browserSecurityHeaders)\n</code></pre> <p>\"BrowserSecurityHeaders is a map of security headers to apply to HTTP responses from the realm's browser clients.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithbrowsersecurityheadersmixin","title":"fn spec.withBrowserSecurityHeadersMixin","text":"<pre><code>withBrowserSecurityHeadersMixin(browserSecurityHeaders)\n</code></pre> <p>\"BrowserSecurityHeaders is a map of security headers to apply to HTTP responses from the realm's browser clients.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithdisablecentralidpmappers","title":"fn spec.withDisableCentralIDPMappers","text":"<pre><code>withDisableCentralIDPMappers(disableCentralIDPMappers)\n</code></pre> <p>\"DisableCentralIDPMappers indicates whether to disable the default identity provider (IDP) mappers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithfrontendurl","title":"fn spec.withFrontendUrl","text":"<pre><code>withFrontendUrl(frontendUrl)\n</code></pre> <p>\"FrontendURL Set the frontend URL for the realm. Use in combination with the default hostname provider to override the base URL for frontend requests for a specific realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithid","title":"fn spec.withId","text":"<pre><code>withId(id)\n</code></pre> <p>\"ID is the ID of the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithkeycloakowner","title":"fn spec.withKeycloakOwner","text":"<pre><code>withKeycloakOwner(keycloakOwner)\n</code></pre> <p>\"Deprecated: use KeycloakRef instead. KeycloakOwner specifies the name of the Keycloak instance that owns the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithpasswordpolicy","title":"fn spec.withPasswordPolicy","text":"<pre><code>withPasswordPolicy(passwordPolicy)\n</code></pre> <p>\"PasswordPolicies is a list of password policies to apply to the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithpasswordpolicymixin","title":"fn spec.withPasswordPolicyMixin","text":"<pre><code>withPasswordPolicyMixin(passwordPolicy)\n</code></pre> <p>\"PasswordPolicies is a list of password policies to apply to the realm.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithrealmname","title":"fn spec.withRealmName","text":"<pre><code>withRealmName(realmName)\n</code></pre> <p>\"RealmName specifies the name of the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithssoautoredirectenabled","title":"fn spec.withSsoAutoRedirectEnabled","text":"<pre><code>withSsoAutoRedirectEnabled(ssoAutoRedirectEnabled)\n</code></pre> <p>\"SsoAutoRedirectEnabled indicates whether to enable automatic redirection to the SSO realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithssorealmenabled","title":"fn spec.withSsoRealmEnabled","text":"<pre><code>withSsoRealmEnabled(ssoRealmEnabled)\n</code></pre> <p>\"SsoRealmEnabled indicates whether to enable the SSO realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithssorealmmappers","title":"fn spec.withSsoRealmMappers","text":"<pre><code>withSsoRealmMappers(ssoRealmMappers)\n</code></pre> <p>\"SSORealmMappers is a list of SSO realm mappers to create in the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithssorealmmappersmixin","title":"fn spec.withSsoRealmMappersMixin","text":"<pre><code>withSsoRealmMappersMixin(ssoRealmMappers)\n</code></pre> <p>\"SSORealmMappers is a list of SSO realm mappers to create in the realm.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithssorealmname","title":"fn spec.withSsoRealmName","text":"<pre><code>withSsoRealmName(ssoRealmName)\n</code></pre> <p>\"SsoRealmName specifies the name of the SSO realm used by the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithusers","title":"fn spec.withUsers","text":"<pre><code>withUsers(users)\n</code></pre> <p>\"Users is a list of users to create in the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specwithusersmixin","title":"fn spec.withUsersMixin","text":"<pre><code>withUsersMixin(users)\n</code></pre> <p>\"Users is a list of users to create in the realm.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#obj-speckeycloakref","title":"obj spec.keycloakRef","text":"<p>\"KeycloakRef is reference to Keycloak custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-speckeycloakrefwithkind","title":"fn spec.keycloakRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind specifies the kind of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-speckeycloakrefwithname","title":"fn spec.keycloakRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#obj-specpasswordpolicy","title":"obj spec.passwordPolicy","text":"<p>\"PasswordPolicies is a list of password policies to apply to the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specpasswordpolicywithtype","title":"fn spec.passwordPolicy.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of password policy.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specpasswordpolicywithvalue","title":"fn spec.passwordPolicy.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value of password policy.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#obj-specrealmeventconfig","title":"obj spec.realmEventConfig","text":"<p>\"RealmEventConfig is the configuration for events in the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwithadmineventsdetailsenabled","title":"fn spec.realmEventConfig.withAdminEventsDetailsEnabled","text":"<pre><code>withAdminEventsDetailsEnabled(adminEventsDetailsEnabled)\n</code></pre> <p>\"AdminEventsDetailsEnabled indicates whether to enable detailed admin events.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwithadmineventsenabled","title":"fn spec.realmEventConfig.withAdminEventsEnabled","text":"<pre><code>withAdminEventsEnabled(adminEventsEnabled)\n</code></pre> <p>\"AdminEventsEnabled indicates whether to enable admin events.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwithenabledeventtypes","title":"fn spec.realmEventConfig.withEnabledEventTypes","text":"<pre><code>withEnabledEventTypes(enabledEventTypes)\n</code></pre> <p>\"EnabledEventTypes is a list of event types to enable.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwithenabledeventtypesmixin","title":"fn spec.realmEventConfig.withEnabledEventTypesMixin","text":"<pre><code>withEnabledEventTypesMixin(enabledEventTypes)\n</code></pre> <p>\"EnabledEventTypes is a list of event types to enable.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwitheventsenabled","title":"fn spec.realmEventConfig.withEventsEnabled","text":"<pre><code>withEventsEnabled(eventsEnabled)\n</code></pre> <p>\"EventsEnabled indicates whether to enable events.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwitheventsexpiration","title":"fn spec.realmEventConfig.withEventsExpiration","text":"<pre><code>withEventsExpiration(eventsExpiration)\n</code></pre> <p>\"EventsExpiration is the number of seconds after which events expire.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwitheventslisteners","title":"fn spec.realmEventConfig.withEventsListeners","text":"<pre><code>withEventsListeners(eventsListeners)\n</code></pre> <p>\"EventsListeners is a list of event listeners to enable.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specrealmeventconfigwitheventslistenersmixin","title":"fn spec.realmEventConfig.withEventsListenersMixin","text":"<pre><code>withEventsListenersMixin(eventsListeners)\n</code></pre> <p>\"EventsListeners is a list of event listeners to enable.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#obj-specssorealmmappers","title":"obj spec.ssoRealmMappers","text":"<p>\"SSORealmMappers is a list of SSO realm mappers to create in the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specssorealmmapperswithconfig","title":"fn spec.ssoRealmMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre> <p>\"Config is a map of configuration options for the SSO realm mapper.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specssorealmmapperswithconfigmixin","title":"fn spec.ssoRealmMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>\"Config is a map of configuration options for the SSO realm mapper.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specssorealmmapperswithidentityprovidermapper","title":"fn spec.ssoRealmMappers.withIdentityProviderMapper","text":"<pre><code>withIdentityProviderMapper(identityProviderMapper)\n</code></pre> <p>\"IdentityProviderMapper specifies the identity provider mapper to use.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specssorealmmapperswithname","title":"fn spec.ssoRealmMappers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the SSO realm mapper.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#obj-specthemes","title":"obj spec.themes","text":"<p>\"Themes is a map of themes to apply to the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specthemeswithaccounttheme","title":"fn spec.themes.withAccountTheme","text":"<pre><code>withAccountTheme(accountTheme)\n</code></pre> <p>\"AccountTheme specifies the account theme to use for the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specthemeswithadminconsoletheme","title":"fn spec.themes.withAdminConsoleTheme","text":"<pre><code>withAdminConsoleTheme(adminConsoleTheme)\n</code></pre> <p>\"AdminConsoleTheme specifies the admin console theme to use for the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specthemeswithemailtheme","title":"fn spec.themes.withEmailTheme","text":"<pre><code>withEmailTheme(emailTheme)\n</code></pre> <p>\"EmailTheme specifies the email theme to use for the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specthemeswithinternationalizationenabled","title":"fn spec.themes.withInternationalizationEnabled","text":"<pre><code>withInternationalizationEnabled(internationalizationEnabled)\n</code></pre> <p>\"InternationalizationEnabled indicates whether to enable internationalization.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specthemeswithlogintheme","title":"fn spec.themes.withLoginTheme","text":"<pre><code>withLoginTheme(loginTheme)\n</code></pre> <p>\"LoginTheme specifies the login theme to use for the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#obj-specusers","title":"obj spec.users","text":"<p>\"Users is a list of users to create in the realm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specuserswithrealmroles","title":"fn spec.users.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specuserswithrealmrolesmixin","title":"fn spec.users.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealm/#fn-specuserswithusername","title":"fn spec.users.withUsername","text":"<pre><code>withUsername(username)\n</code></pre> <p>\"Username of keycloak user.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/","title":"v1.v1.keycloakRealmComponent","text":"<p>\"KeycloakRealmComponent is the Schema for the keycloak component API.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withProviderType(providerType)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>obj spec.parentRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.realmRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmComponent</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#obj-spec","title":"obj spec","text":"<p>\"KeycloakComponentSpec defines the desired state of KeycloakRealmComponent.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-specwithconfig","title":"fn spec.withConfig","text":"<pre><code>withConfig(config)\n</code></pre> <p>\"Config is a map of component configuration.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-specwithconfigmixin","title":"fn spec.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>\"Config is a map of component configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of keycloak component.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre> <p>\"ProviderID is a provider ID of component.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-specwithprovidertype","title":"fn spec.withProviderType","text":"<pre><code>withProviderType(providerType)\n</code></pre> <p>\"ProviderType is a provider type of component.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Deprecated: use RealmRef instead. Realm is name of KeycloakRealm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#obj-specparentref","title":"obj spec.parentRef","text":"<p>\"ParentRef specifies a parent resource. If not specified, then parent is realm specified in realm field.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-specparentrefwithkind","title":"fn spec.parentRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a kind of parent component. By default, it is KeycloakRealm.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-specparentrefwithname","title":"fn spec.parentRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is a name of parent component custom resource. For example, if Kind is KeycloakRealm, then Name is name of KeycloakRealm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#obj-specrealmref","title":"obj spec.realmRef","text":"<p>\"RealmRef is reference to Realm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-specrealmrefwithkind","title":"fn spec.realmRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind specifies the kind of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmComponent/#fn-specrealmrefwithname","title":"fn spec.realmRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/","title":"v1.v1.keycloakRealmGroup","text":"<p>\"KeycloakRealmGroup is the Schema for the keycloak group API.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAccess(access)</code></li> <li><code>fn withAccessMixin(access)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withSubGroups(subGroups)</code></li> <li><code>fn withSubGroupsMixin(subGroups)</code></li> <li><code>obj spec.clientRoles</code><ul> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> </ul> </li> <li><code>obj spec.realmRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmGroup</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmGroupSpec defines the desired state of KeycloakRealmGroup.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithaccess","title":"fn spec.withAccess","text":"<pre><code>withAccess(access)\n</code></pre> <p>\"Access is a map of group access.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithaccessmixin","title":"fn spec.withAccessMixin","text":"<pre><code>withAccessMixin(access)\n</code></pre> <p>\"Access is a map of group access.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes is a map of group attributes.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes is a map of group attributes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithclientroles","title":"fn spec.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre> <p>\"ClientRoles is a list of client roles assigned to group.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithclientrolesmixin","title":"fn spec.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>\"ClientRoles is a list of client roles assigned to group.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of keycloak group.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithpath","title":"fn spec.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is a group path.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Deprecated: use RealmRef instead. Realm is name of KeycloakRealm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithrealmroles","title":"fn spec.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of realm roles assigned to group.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithrealmrolesmixin","title":"fn spec.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of realm roles assigned to group.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithsubgroups","title":"fn spec.withSubGroups","text":"<pre><code>withSubGroups(subGroups)\n</code></pre> <p>\"SubGroups is a list of subgroups assigned to group.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specwithsubgroupsmixin","title":"fn spec.withSubGroupsMixin","text":"<pre><code>withSubGroupsMixin(subGroups)\n</code></pre> <p>\"SubGroups is a list of subgroups assigned to group.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#obj-specclientroles","title":"obj spec.clientRoles","text":"<p>\"ClientRoles is a list of client roles assigned to group.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specclientroleswithclientid","title":"fn spec.clientRoles.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre> <p>\"ClientID is a client ID.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specclientroleswithroles","title":"fn spec.clientRoles.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre> <p>\"Roles is a list of client roles names assigned to service account.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specclientroleswithrolesmixin","title":"fn spec.clientRoles.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>\"Roles is a list of client roles names assigned to service account.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#obj-specrealmref","title":"obj spec.realmRef","text":"<p>\"RealmRef is reference to Realm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specrealmrefwithkind","title":"fn spec.realmRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind specifies the kind of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmGroup/#fn-specrealmrefwithname","title":"fn spec.realmRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/","title":"v1.v1.keycloakRealmIdentityProvider","text":"<p>\"KeycloakRealmIdentityProvider is the Schema for the keycloak realm identity provider API.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddReadTokenRoleOnCreate(addReadTokenRoleOnCreate)</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticateByDefault(authenticateByDefault)</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withDisplayName(displayName)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFirstBrokerLoginFlowAlias(firstBrokerLoginFlowAlias)</code></li> <li><code>fn withLinkOnly(linkOnly)</code></li> <li><code>fn withMappers(mappers)</code></li> <li><code>fn withMappersMixin(mappers)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withStoreToken(storeToken)</code></li> <li><code>fn withTrustEmail(trustEmail)</code></li> <li><code>obj spec.mappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withIdentityProviderAlias(identityProviderAlias)</code></li> <li><code>fn withIdentityProviderMapper(identityProviderMapper)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.realmRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmIdentityProvider</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmIdentityProviderSpec defines the desired state of KeycloakRealmIdentityProvider.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithaddreadtokenroleoncreate","title":"fn spec.withAddReadTokenRoleOnCreate","text":"<pre><code>withAddReadTokenRoleOnCreate(addReadTokenRoleOnCreate)\n</code></pre> <p>\"AddReadTokenRoleOnCreate is a flag to add read token role on create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithalias","title":"fn spec.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre> <p>\"Alias is a alias of identity provider.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithauthenticatebydefault","title":"fn spec.withAuthenticateByDefault","text":"<pre><code>withAuthenticateByDefault(authenticateByDefault)\n</code></pre> <p>\"AuthenticateByDefault is a flag to authenticate by default.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithconfig","title":"fn spec.withConfig","text":"<pre><code>withConfig(config)\n</code></pre> <p>\"Config is a map of identity provider configuration.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithconfigmixin","title":"fn spec.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>\"Config is a map of identity provider configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithdisplayname","title":"fn spec.withDisplayName","text":"<pre><code>withDisplayName(displayName)\n</code></pre> <p>\"DisplayName is a display name of identity provider.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithenabled","title":"fn spec.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"Enabled is a flag to enable/disable identity provider.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithfirstbrokerloginflowalias","title":"fn spec.withFirstBrokerLoginFlowAlias","text":"<pre><code>withFirstBrokerLoginFlowAlias(firstBrokerLoginFlowAlias)\n</code></pre> <p>\"FirstBrokerLoginFlowAlias is a first broker login flow alias.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithlinkonly","title":"fn spec.withLinkOnly","text":"<pre><code>withLinkOnly(linkOnly)\n</code></pre> <p>\"LinkOnly is a flag to link only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithmappers","title":"fn spec.withMappers","text":"<pre><code>withMappers(mappers)\n</code></pre> <p>\"Mappers is a list of identity provider mappers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithmappersmixin","title":"fn spec.withMappersMixin","text":"<pre><code>withMappersMixin(mappers)\n</code></pre> <p>\"Mappers is a list of identity provider mappers.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre> <p>\"ProviderID is a provider ID of identity provider.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Deprecated: use RealmRef instead. Realm is name of KeycloakRealm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithstoretoken","title":"fn spec.withStoreToken","text":"<pre><code>withStoreToken(storeToken)\n</code></pre> <p>\"StoreToken is a flag to store token.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specwithtrustemail","title":"fn spec.withTrustEmail","text":"<pre><code>withTrustEmail(trustEmail)\n</code></pre> <p>\"TrustEmail is a flag to trust email.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#obj-specmappers","title":"obj spec.mappers","text":"<p>\"Mappers is a list of identity provider mappers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specmapperswithconfig","title":"fn spec.mappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre> <p>\"Config is a map of identity provider mapper configuration.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specmapperswithconfigmixin","title":"fn spec.mappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>\"Config is a map of identity provider mapper configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specmapperswithidentityprovideralias","title":"fn spec.mappers.withIdentityProviderAlias","text":"<pre><code>withIdentityProviderAlias(identityProviderAlias)\n</code></pre> <p>\"IdentityProviderAlias is a identity provider alias.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specmapperswithidentityprovidermapper","title":"fn spec.mappers.withIdentityProviderMapper","text":"<pre><code>withIdentityProviderMapper(identityProviderMapper)\n</code></pre> <p>\"IdentityProviderMapper is a identity provider mapper.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specmapperswithname","title":"fn spec.mappers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is a name of identity provider mapper.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#obj-specrealmref","title":"obj spec.realmRef","text":"<p>\"RealmRef is reference to Realm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specrealmrefwithkind","title":"fn spec.realmRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind specifies the kind of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmIdentityProvider/#fn-specrealmrefwithname","title":"fn spec.realmRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/","title":"v1.v1.keycloakRealmRole","text":"<p>\"KeycloakRealmRole is the Schema for the keycloak group API.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withComposite(composite)</code></li> <li><code>fn withComposites(composites)</code></li> <li><code>fn withCompositesMixin(composites)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withIsDefault(isDefault)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>obj spec.composites</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.realmRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmRole</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmRoleSpec defines the desired state of KeycloakRealmRole.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes is a map of role attributes.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes is a map of role attributes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specwithcomposite","title":"fn spec.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre> <p>\"Composite is a flag if role is composite.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specwithcomposites","title":"fn spec.withComposites","text":"<pre><code>withComposites(composites)\n</code></pre> <p>\"Composites is a list of composites roles assigned to role.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specwithcompositesmixin","title":"fn spec.withCompositesMixin","text":"<pre><code>withCompositesMixin(composites)\n</code></pre> <p>\"Composites is a list of composites roles assigned to role.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description is a role description.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specwithisdefault","title":"fn spec.withIsDefault","text":"<pre><code>withIsDefault(isDefault)\n</code></pre> <p>\"IsDefault is a flag if role is default.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of keycloak role.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Deprecated: use RealmRef instead. Realm is name of KeycloakRealm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#obj-speccomposites","title":"obj spec.composites","text":"<p>\"Composites is a list of composites roles assigned to role.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-speccompositeswithname","title":"fn spec.composites.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is a name of composite role.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#obj-specrealmref","title":"obj spec.realmRef","text":"<p>\"RealmRef is reference to Realm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specrealmrefwithkind","title":"fn spec.realmRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind specifies the kind of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRole/#fn-specrealmrefwithname","title":"fn spec.realmRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/","title":"v1.v1.keycloakRealmRoleBatch","text":"<p>\"KeycloakRealmRoleBatch is the Schema for the keycloak roles API.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> <li><code>obj spec.realmRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.roles</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withComposite(composite)</code></li> <li><code>fn withComposites(composites)</code></li> <li><code>fn withCompositesMixin(composites)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withIsDefault(isDefault)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.roles.composites</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmRoleBatch</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmRoleBatchSpec defines the desired state of KeycloakRealmRoleBatch.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Deprecated: use RealmRef instead. Realm is name of KeycloakRealm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specwithroles","title":"fn spec.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre> <p>\"Roles is a list of roles to be created.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specwithrolesmixin","title":"fn spec.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>\"Roles is a list of roles to be created.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#obj-specrealmref","title":"obj spec.realmRef","text":"<p>\"RealmRef is reference to Realm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specrealmrefwithkind","title":"fn spec.realmRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind specifies the kind of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specrealmrefwithname","title":"fn spec.realmRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#obj-specroles","title":"obj spec.roles","text":"<p>\"Roles is a list of roles to be created.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithattributes","title":"fn spec.roles.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes is a map of role attributes.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithattributesmixin","title":"fn spec.roles.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes is a map of role attributes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithcomposite","title":"fn spec.roles.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre> <p>\"Composite is a flag if role is composite.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithcomposites","title":"fn spec.roles.withComposites","text":"<pre><code>withComposites(composites)\n</code></pre> <p>\"Composites is a list of composites roles assigned to role.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithcompositesmixin","title":"fn spec.roles.withCompositesMixin","text":"<pre><code>withCompositesMixin(composites)\n</code></pre> <p>\"Composites is a list of composites roles assigned to role.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithdescription","title":"fn spec.roles.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description is a role description.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithisdefault","title":"fn spec.roles.withIsDefault","text":"<pre><code>withIsDefault(isDefault)\n</code></pre> <p>\"IsDefault is a flag if role is default.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specroleswithname","title":"fn spec.roles.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of keycloak role.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#obj-specrolescomposites","title":"obj spec.roles.composites","text":"<p>\"Composites is a list of composites roles assigned to role.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmRoleBatch/#fn-specrolescompositeswithname","title":"fn spec.roles.composites.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is a name of composite role.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/","title":"v1.v1.keycloakRealmUser","text":"<p>\"KeycloakRealmUser is the Schema for the keycloak user API.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withEmail(email)</code></li> <li><code>fn withEmailVerified(emailVerified)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFirstName(firstName)</code></li> <li><code>fn withGroups(groups)</code></li> <li><code>fn withGroupsMixin(groups)</code></li> <li><code>fn withKeepResource(keepResource)</code></li> <li><code>fn withLastName(lastName)</code></li> <li><code>fn withPassword(password)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withReconciliationStrategy(reconciliationStrategy)</code></li> <li><code>fn withRequiredUserActions(requiredUserActions)</code></li> <li><code>fn withRequiredUserActionsMixin(requiredUserActions)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> <li><code>fn withUsername(username)</code></li> <li><code>obj spec.passwordSecret</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.realmRef</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmUser</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmUserSpec defines the desired state of KeycloakRealmUser.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes is a map of user attributes.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes is a map of user attributes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithemail","title":"fn spec.withEmail","text":"<pre><code>withEmail(email)\n</code></pre> <p>\"Email is a user email.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithemailverified","title":"fn spec.withEmailVerified","text":"<pre><code>withEmailVerified(emailVerified)\n</code></pre> <p>\"EmailVerified is a user email verified flag.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithenabled","title":"fn spec.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"Enabled is a user enabled flag.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithfirstname","title":"fn spec.withFirstName","text":"<pre><code>withFirstName(firstName)\n</code></pre> <p>\"FirstName is a user first name.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithgroups","title":"fn spec.withGroups","text":"<pre><code>withGroups(groups)\n</code></pre> <p>\"Groups is a list of groups assigned to user.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithgroupsmixin","title":"fn spec.withGroupsMixin","text":"<pre><code>withGroupsMixin(groups)\n</code></pre> <p>\"Groups is a list of groups assigned to user.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithkeepresource","title":"fn spec.withKeepResource","text":"<pre><code>withKeepResource(keepResource)\n</code></pre> <p>\"KeepResource is a flag if resource should be kept after deletion. If set to true, user will not be deleted from keycloak.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithlastname","title":"fn spec.withLastName","text":"<pre><code>withLastName(lastName)\n</code></pre> <p>\"LastName is a user last name.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithpassword","title":"fn spec.withPassword","text":"<pre><code>withPassword(password)\n</code></pre> <p>\"Password is a user password. Allows to keep user password within Custom Resource. For security concerns, it is recommended to use PasswordSecret instead.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Deprecated: use RealmRef instead. Realm is name of KeycloakRealm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithreconciliationstrategy","title":"fn spec.withReconciliationStrategy","text":"<pre><code>withReconciliationStrategy(reconciliationStrategy)\n</code></pre> <p>\"ReconciliationStrategy is a strategy for reconciliation. Possible values: full, create-only. Default value: full. If set to create-only, user will be created only if it does not exist. If user exists, it will not be updated. If set to full, user will be created if it does not exist, or updated if it exists.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithrequireduseractions","title":"fn spec.withRequiredUserActions","text":"<pre><code>withRequiredUserActions(requiredUserActions)\n</code></pre> <p>\"RequiredUserActions is required action when user log in, example: CONFIGURE_TOTP, UPDATE_PASSWORD, UPDATE_PROFILE, VERIFY_EMAIL.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithrequireduseractionsmixin","title":"fn spec.withRequiredUserActionsMixin","text":"<pre><code>withRequiredUserActionsMixin(requiredUserActions)\n</code></pre> <p>\"RequiredUserActions is required action when user log in, example: CONFIGURE_TOTP, UPDATE_PASSWORD, UPDATE_PROFILE, VERIFY_EMAIL.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithroles","title":"fn spec.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre> <p>\"Roles is a list of roles assigned to user.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithrolesmixin","title":"fn spec.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>\"Roles is a list of roles assigned to user.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specwithusername","title":"fn spec.withUsername","text":"<pre><code>withUsername(username)\n</code></pre> <p>\"Username is a username in keycloak.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#obj-specpasswordsecret","title":"obj spec.passwordSecret","text":"<p>\"PasswordSecret defines Kubernetes secret Name and Key, which holds User secret.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specpasswordsecretwithkey","title":"fn spec.passwordSecret.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"Key is the key in the secret.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specpasswordsecretwithname","title":"fn spec.passwordSecret.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the name of the secret.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#obj-specrealmref","title":"obj spec.realmRef","text":"<p>\"RealmRef is reference to Realm custom resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specrealmrefwithkind","title":"fn spec.realmRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind specifies the kind of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1/keycloakRealmUser/#fn-specrealmrefwithname","title":"fn spec.realmRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the Keycloak resource.\"</p>"},{"location":"1.17.0/v1/v1alpha1/","title":"v1.v1alpha1","text":"<ul> <li>clusterKeycloak</li> <li>clusterKeycloakRealm</li> <li>keycloak</li> <li>keycloakAuthFlow</li> <li>keycloakClient</li> <li>keycloakClientScope</li> <li>keycloakRealm</li> <li>keycloakRealmComponent</li> <li>keycloakRealmGroup</li> <li>keycloakRealmIdentityProvider</li> <li>keycloakRealmRole</li> <li>keycloakRealmRoleBatch</li> <li>keycloakRealmUser</li> </ul>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/","title":"v1.v1alpha1.clusterKeycloak","text":"<p>\"ClusterKeycloak is the Schema for the clusterkeycloaks API.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAdminType(adminType)</code></li> <li><code>fn withSecret(secret)</code></li> <li><code>fn withUrl(url)</code></li> </ul>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterKeycloak</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#obj-spec","title":"obj spec","text":"<p>\"ClusterKeycloakSpec defines the desired state of ClusterKeycloak.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-specwithadmintype","title":"fn spec.withAdminType","text":"<pre><code>withAdminType(adminType)\n</code></pre> <p>\"AdminType can be user or serviceAccount, if serviceAccount was specified, then client_credentials grant type should be used for getting admin realm token.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-specwithsecret","title":"fn spec.withSecret","text":"<pre><code>withSecret(secret)\n</code></pre> <p>\"Secret is a secret name which contains admin credentials.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloak/#fn-specwithurl","title":"fn spec.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL of keycloak service.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/","title":"v1.v1alpha1.clusterKeycloakRealm","text":"<p>\"ClusterKeycloakRealm is the Schema for the clusterkeycloakrealms API.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withBrowserSecurityHeaders(browserSecurityHeaders)</code></li> <li><code>fn withBrowserSecurityHeadersMixin(browserSecurityHeaders)</code></li> <li><code>fn withClusterKeycloakRef(clusterKeycloakRef)</code></li> <li><code>fn withFrontendUrl(frontendUrl)</code></li> <li><code>fn withPasswordPolicy(passwordPolicy)</code></li> <li><code>fn withPasswordPolicyMixin(passwordPolicy)</code></li> <li><code>fn withRealmName(realmName)</code></li> <li><code>obj spec.localization</code><ul> <li><code>fn withInternationalizationEnabled(internationalizationEnabled)</code></li> </ul> </li> <li><code>obj spec.passwordPolicy</code><ul> <li><code>fn withType(type)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.realmEventConfig</code><ul> <li><code>fn withAdminEventsDetailsEnabled(adminEventsDetailsEnabled)</code></li> <li><code>fn withAdminEventsEnabled(adminEventsEnabled)</code></li> <li><code>fn withEnabledEventTypes(enabledEventTypes)</code></li> <li><code>fn withEnabledEventTypesMixin(enabledEventTypes)</code></li> <li><code>fn withEventsEnabled(eventsEnabled)</code></li> <li><code>fn withEventsExpiration(eventsExpiration)</code></li> <li><code>fn withEventsListeners(eventsListeners)</code></li> <li><code>fn withEventsListenersMixin(eventsListeners)</code></li> </ul> </li> <li><code>obj spec.themes</code><ul> <li><code>fn withAccountTheme(accountTheme)</code></li> <li><code>fn withAdminConsoleTheme(adminConsoleTheme)</code></li> <li><code>fn withEmailTheme(emailTheme)</code></li> <li><code>fn withLoginTheme(loginTheme)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterKeycloakRealm</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#obj-spec","title":"obj spec","text":"<p>\"ClusterKeycloakRealmSpec defines the desired state of ClusterKeycloakRealm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specwithbrowsersecurityheaders","title":"fn spec.withBrowserSecurityHeaders","text":"<pre><code>withBrowserSecurityHeaders(browserSecurityHeaders)\n</code></pre> <p>\"BrowserSecurityHeaders is a map of security headers to apply to HTTP responses from the realm's browser clients.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specwithbrowsersecurityheadersmixin","title":"fn spec.withBrowserSecurityHeadersMixin","text":"<pre><code>withBrowserSecurityHeadersMixin(browserSecurityHeaders)\n</code></pre> <p>\"BrowserSecurityHeaders is a map of security headers to apply to HTTP responses from the realm's browser clients.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specwithclusterkeycloakref","title":"fn spec.withClusterKeycloakRef","text":"<pre><code>withClusterKeycloakRef(clusterKeycloakRef)\n</code></pre> <p>\"ClusterKeycloakRef is a name of the ClusterKeycloak instance that owns the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specwithfrontendurl","title":"fn spec.withFrontendUrl","text":"<pre><code>withFrontendUrl(frontendUrl)\n</code></pre> <p>\"FrontendURL Set the frontend URL for the realm. Use in combination with the default hostname provider to override the base URL for frontend requests for a specific realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specwithpasswordpolicy","title":"fn spec.withPasswordPolicy","text":"<pre><code>withPasswordPolicy(passwordPolicy)\n</code></pre> <p>\"PasswordPolicies is a list of password policies to apply to the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specwithpasswordpolicymixin","title":"fn spec.withPasswordPolicyMixin","text":"<pre><code>withPasswordPolicyMixin(passwordPolicy)\n</code></pre> <p>\"PasswordPolicies is a list of password policies to apply to the realm.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specwithrealmname","title":"fn spec.withRealmName","text":"<pre><code>withRealmName(realmName)\n</code></pre> <p>\"RealmName specifies the name of the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#obj-speclocalization","title":"obj spec.localization","text":"<p>\"Localization is the configuration for localization in the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-speclocalizationwithinternationalizationenabled","title":"fn spec.localization.withInternationalizationEnabled","text":"<pre><code>withInternationalizationEnabled(internationalizationEnabled)\n</code></pre> <p>\"InternationalizationEnabled indicates whether to enable internationalization.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#obj-specpasswordpolicy","title":"obj spec.passwordPolicy","text":"<p>\"PasswordPolicies is a list of password policies to apply to the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specpasswordpolicywithtype","title":"fn spec.passwordPolicy.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of password policy.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specpasswordpolicywithvalue","title":"fn spec.passwordPolicy.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value of password policy.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#obj-specrealmeventconfig","title":"obj spec.realmEventConfig","text":"<p>\"RealmEventConfig is the configuration for events in the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specrealmeventconfigwithadmineventsdetailsenabled","title":"fn spec.realmEventConfig.withAdminEventsDetailsEnabled","text":"<pre><code>withAdminEventsDetailsEnabled(adminEventsDetailsEnabled)\n</code></pre> <p>\"AdminEventsDetailsEnabled indicates whether to enable detailed admin events.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specrealmeventconfigwithadmineventsenabled","title":"fn spec.realmEventConfig.withAdminEventsEnabled","text":"<pre><code>withAdminEventsEnabled(adminEventsEnabled)\n</code></pre> <p>\"AdminEventsEnabled indicates whether to enable admin events.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specrealmeventconfigwithenabledeventtypes","title":"fn spec.realmEventConfig.withEnabledEventTypes","text":"<pre><code>withEnabledEventTypes(enabledEventTypes)\n</code></pre> <p>\"EnabledEventTypes is a list of event types to enable.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specrealmeventconfigwithenabledeventtypesmixin","title":"fn spec.realmEventConfig.withEnabledEventTypesMixin","text":"<pre><code>withEnabledEventTypesMixin(enabledEventTypes)\n</code></pre> <p>\"EnabledEventTypes is a list of event types to enable.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specrealmeventconfigwitheventsenabled","title":"fn spec.realmEventConfig.withEventsEnabled","text":"<pre><code>withEventsEnabled(eventsEnabled)\n</code></pre> <p>\"EventsEnabled indicates whether to enable events.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specrealmeventconfigwitheventsexpiration","title":"fn spec.realmEventConfig.withEventsExpiration","text":"<pre><code>withEventsExpiration(eventsExpiration)\n</code></pre> <p>\"EventsExpiration is the number of seconds after which events expire.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specrealmeventconfigwitheventslisteners","title":"fn spec.realmEventConfig.withEventsListeners","text":"<pre><code>withEventsListeners(eventsListeners)\n</code></pre> <p>\"EventsListeners is a list of event listeners to enable.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specrealmeventconfigwitheventslistenersmixin","title":"fn spec.realmEventConfig.withEventsListenersMixin","text":"<pre><code>withEventsListenersMixin(eventsListeners)\n</code></pre> <p>\"EventsListeners is a list of event listeners to enable.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#obj-specthemes","title":"obj spec.themes","text":"<p>\"Themes is a map of themes to apply to the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specthemeswithaccounttheme","title":"fn spec.themes.withAccountTheme","text":"<pre><code>withAccountTheme(accountTheme)\n</code></pre> <p>\"AccountTheme specifies the account theme to use for the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specthemeswithadminconsoletheme","title":"fn spec.themes.withAdminConsoleTheme","text":"<pre><code>withAdminConsoleTheme(adminConsoleTheme)\n</code></pre> <p>\"AdminConsoleTheme specifies the admin console theme to use for the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specthemeswithemailtheme","title":"fn spec.themes.withEmailTheme","text":"<pre><code>withEmailTheme(emailTheme)\n</code></pre> <p>\"EmailTheme specifies the email theme to use for the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/clusterKeycloakRealm/#fn-specthemeswithlogintheme","title":"fn spec.themes.withLoginTheme","text":"<pre><code>withLoginTheme(loginTheme)\n</code></pre> <p>\"LoginTheme specifies the login theme to use for the realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/","title":"v1.v1alpha1.keycloak","text":"<p>\"Keycloak is the Schema for the keycloaks API.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAdminType(adminType)</code></li> <li><code>fn withInstallMainRealm(installMainRealm)</code></li> <li><code>fn withRealmName(realmName)</code></li> <li><code>fn withSecret(secret)</code></li> <li><code>fn withSsoRealmName(ssoRealmName)</code></li> <li><code>fn withUrl(url)</code></li> <li><code>fn withUsers(users)</code></li> <li><code>fn withUsersMixin(users)</code></li> <li><code>obj spec.users</code><ul> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withUsername(username)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Keycloak</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#obj-spec","title":"obj spec","text":"<p>\"KeycloakSpec defines the desired state of Keycloak.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specwithadmintype","title":"fn spec.withAdminType","text":"<pre><code>withAdminType(adminType)\n</code></pre> <p>\"AdminType can be user or serviceAccount, if serviceAccount was specified, then client_credentials grant type should be used for getting admin realm token\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specwithinstallmainrealm","title":"fn spec.withInstallMainRealm","text":"<pre><code>withInstallMainRealm(installMainRealm)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specwithrealmname","title":"fn spec.withRealmName","text":"<pre><code>withRealmName(realmName)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specwithsecret","title":"fn spec.withSecret","text":"<pre><code>withSecret(secret)\n</code></pre> <p>\"Secret is the name of the k8s object Secret related to keycloak\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specwithssorealmname","title":"fn spec.withSsoRealmName","text":"<pre><code>withSsoRealmName(ssoRealmName)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specwithurl","title":"fn spec.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL of keycloak service\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specwithusers","title":"fn spec.withUsers","text":"<pre><code>withUsers(users)\n</code></pre> <p>\"Users is a list of keycloak users\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specwithusersmixin","title":"fn spec.withUsersMixin","text":"<pre><code>withUsersMixin(users)\n</code></pre> <p>\"Users is a list of keycloak users\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#obj-specusers","title":"obj spec.users","text":"<p>\"Users is a list of keycloak users\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specuserswithrealmroles","title":"fn spec.users.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specuserswithrealmrolesmixin","title":"fn spec.users.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloak/#fn-specuserswithusername","title":"fn spec.users.withUsername","text":"<pre><code>withUsername(username)\n</code></pre> <p>\"Username of keycloak user\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/","title":"v1.v1alpha1.keycloakAuthFlow","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticationExecutions(authenticationExecutions)</code></li> <li><code>fn withAuthenticationExecutionsMixin(authenticationExecutions)</code></li> <li><code>fn withBuiltIn(builtIn)</code></li> <li><code>fn withChildType(childType)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withParentName(parentName)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withTopLevel(topLevel)</code></li> <li><code>obj spec.authenticationExecutions</code><ul> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticator(authenticator)</code></li> <li><code>fn withAuthenticatorFlow(authenticatorFlow)</code></li> <li><code>fn withPriority(priority)</code></li> <li><code>fn withRequirement(requirement)</code></li> <li><code>obj spec.authenticationExecutions.authenticatorConfig</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakAuthFlow</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#obj-spec","title":"obj spec","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithalias","title":"fn spec.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre> <p>\"Alias is display name for authentication flow\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithauthenticationexecutions","title":"fn spec.withAuthenticationExecutions","text":"<pre><code>withAuthenticationExecutions(authenticationExecutions)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithauthenticationexecutionsmixin","title":"fn spec.withAuthenticationExecutionsMixin","text":"<pre><code>withAuthenticationExecutionsMixin(authenticationExecutions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithbuiltin","title":"fn spec.withBuiltIn","text":"<pre><code>withBuiltIn(builtIn)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithchildtype","title":"fn spec.withChildType","text":"<pre><code>withChildType(childType)\n</code></pre> <p>\"ChildType is type for auth flow if it has a parent, available options: basic-flow, form-flow\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithparentname","title":"fn spec.withParentName","text":"<pre><code>withParentName(parentName)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre> <p>\"ProviderID for root auth flow and provider for child auth flows\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Realm is name of keycloak realm\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specwithtoplevel","title":"fn spec.withTopLevel","text":"<pre><code>withTopLevel(topLevel)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#obj-specauthenticationexecutions","title":"obj spec.authenticationExecutions","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionswithalias","title":"fn spec.authenticationExecutions.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionswithauthenticator","title":"fn spec.authenticationExecutions.withAuthenticator","text":"<pre><code>withAuthenticator(authenticator)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionswithauthenticatorflow","title":"fn spec.authenticationExecutions.withAuthenticatorFlow","text":"<pre><code>withAuthenticatorFlow(authenticatorFlow)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionswithpriority","title":"fn spec.authenticationExecutions.withPriority","text":"<pre><code>withPriority(priority)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionswithrequirement","title":"fn spec.authenticationExecutions.withRequirement","text":"<pre><code>withRequirement(requirement)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#obj-specauthenticationexecutionsauthenticatorconfig","title":"obj spec.authenticationExecutions.authenticatorConfig","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithalias","title":"fn spec.authenticationExecutions.authenticatorConfig.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithconfig","title":"fn spec.authenticationExecutions.authenticatorConfig.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakAuthFlow/#fn-specauthenticationexecutionsauthenticatorconfigwithconfigmixin","title":"fn spec.authenticationExecutions.authenticatorConfig.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/","title":"v1.v1alpha1.keycloakClient","text":"<p>\"KeycloakClient is the Schema for the keycloakclients API.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAdvancedProtocolMappers(advancedProtocolMappers)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withDefaultClientScopes(defaultClientScopes)</code></li> <li><code>fn withDefaultClientScopesMixin(defaultClientScopes)</code></li> <li><code>fn withDirectAccess(directAccess)</code></li> <li><code>fn withFrontChannelLogout(frontChannelLogout)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMappers(protocolMappers)</code></li> <li><code>fn withProtocolMappersMixin(protocolMappers)</code></li> <li><code>fn withPublic(public)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withReconciliationStrategy(reconciliationStrategy)</code></li> <li><code>fn withSecret(secret)</code></li> <li><code>fn withTargetRealm(targetRealm)</code></li> <li><code>fn withWebUrl(webUrl)</code></li> <li><code>obj spec.protocolMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMapper(protocolMapper)</code></li> </ul> </li> <li><code>obj spec.realmRoles</code><ul> <li><code>fn withComposite(composite)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.serviceAccount</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>obj spec.serviceAccount.clientRoles</code></li> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakClient</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#obj-spec","title":"obj spec","text":"<p>\"KeycloakClientSpec defines the desired state of KeycloakClient.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithadvancedprotocolmappers","title":"fn spec.withAdvancedProtocolMappers","text":"<pre><code>withAdvancedProtocolMappers(advancedProtocolMappers)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithclientid","title":"fn spec.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre> <p>\"ClientId is a unique keycloak client ID referenced in URI and tokens.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithclientroles","title":"fn spec.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithclientrolesmixin","title":"fn spec.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithdefaultclientscopes","title":"fn spec.withDefaultClientScopes","text":"<pre><code>withDefaultClientScopes(defaultClientScopes)\n</code></pre> <p>\"A list of default client scopes for a keycloak client.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithdefaultclientscopesmixin","title":"fn spec.withDefaultClientScopesMixin","text":"<pre><code>withDefaultClientScopesMixin(defaultClientScopes)\n</code></pre> <p>\"A list of default client scopes for a keycloak client.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithdirectaccess","title":"fn spec.withDirectAccess","text":"<pre><code>withDirectAccess(directAccess)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithfrontchannellogout","title":"fn spec.withFrontChannelLogout","text":"<pre><code>withFrontChannelLogout(frontChannelLogout)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithprotocol","title":"fn spec.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithprotocolmappers","title":"fn spec.withProtocolMappers","text":"<pre><code>withProtocolMappers(protocolMappers)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithprotocolmappersmixin","title":"fn spec.withProtocolMappersMixin","text":"<pre><code>withProtocolMappersMixin(protocolMappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithpublic","title":"fn spec.withPublic","text":"<pre><code>withPublic(public)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithrealmroles","title":"fn spec.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithrealmrolesmixin","title":"fn spec.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithreconciliationstrategy","title":"fn spec.withReconciliationStrategy","text":"<pre><code>withReconciliationStrategy(reconciliationStrategy)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithsecret","title":"fn spec.withSecret","text":"<pre><code>withSecret(secret)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithtargetrealm","title":"fn spec.withTargetRealm","text":"<pre><code>withTargetRealm(targetRealm)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specwithweburl","title":"fn spec.withWebUrl","text":"<pre><code>withWebUrl(webUrl)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#obj-specprotocolmappers","title":"obj spec.protocolMappers","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specprotocolmapperswithconfig","title":"fn spec.protocolMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specprotocolmapperswithconfigmixin","title":"fn spec.protocolMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specprotocolmapperswithname","title":"fn spec.protocolMappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specprotocolmapperswithprotocol","title":"fn spec.protocolMappers.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specprotocolmapperswithprotocolmapper","title":"fn spec.protocolMappers.withProtocolMapper","text":"<pre><code>withProtocolMapper(protocolMapper)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#obj-specrealmroles","title":"obj spec.realmRoles","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specrealmroleswithcomposite","title":"fn spec.realmRoles.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specrealmroleswithname","title":"fn spec.realmRoles.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#obj-specserviceaccount","title":"obj spec.serviceAccount","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithattributes","title":"fn spec.serviceAccount.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithattributesmixin","title":"fn spec.serviceAccount.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithclientroles","title":"fn spec.serviceAccount.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithclientrolesmixin","title":"fn spec.serviceAccount.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithenabled","title":"fn spec.serviceAccount.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithrealmroles","title":"fn spec.serviceAccount.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountwithrealmrolesmixin","title":"fn spec.serviceAccount.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#obj-specserviceaccountclientroles","title":"obj spec.serviceAccount.clientRoles","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountclientroleswithclientid","title":"fn spec.serviceAccount.clientRoles.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountclientroleswithroles","title":"fn spec.serviceAccount.clientRoles.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClient/#fn-specserviceaccountclientroleswithrolesmixin","title":"fn spec.serviceAccount.clientRoles.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/","title":"v1.v1alpha1.keycloakClientScope","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withDefault(default)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMappers(protocolMappers)</code></li> <li><code>fn withProtocolMappersMixin(protocolMappers)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>obj spec.protocolMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withProtocolMapper(protocolMapper)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakClientScope</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#obj-spec","title":"obj spec","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specwithdefault","title":"fn spec.withDefault","text":"<pre><code>withDefault(default)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of keycloak client scope\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specwithprotocol","title":"fn spec.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is SSO protocol configuration which is being supplied by this client scope\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specwithprotocolmappers","title":"fn spec.withProtocolMappers","text":"<pre><code>withProtocolMappers(protocolMappers)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specwithprotocolmappersmixin","title":"fn spec.withProtocolMappersMixin","text":"<pre><code>withProtocolMappersMixin(protocolMappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre> <p>\"Realm is name of keycloak realm\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#obj-specprotocolmappers","title":"obj spec.protocolMappers","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specprotocolmapperswithconfig","title":"fn spec.protocolMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specprotocolmapperswithconfigmixin","title":"fn spec.protocolMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specprotocolmapperswithname","title":"fn spec.protocolMappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specprotocolmapperswithprotocol","title":"fn spec.protocolMappers.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakClientScope/#fn-specprotocolmapperswithprotocolmapper","title":"fn spec.protocolMappers.withProtocolMapper","text":"<pre><code>withProtocolMapper(protocolMapper)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/","title":"v1.v1alpha1.keycloakRealm","text":"<p>\"KeycloakRealm is the Schema for the keycloakrealms API.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withBrowserFlow(browserFlow)</code></li> <li><code>fn withBrowserSecurityHeaders(browserSecurityHeaders)</code></li> <li><code>fn withBrowserSecurityHeadersMixin(browserSecurityHeaders)</code></li> <li><code>fn withDisableCentralIDPMappers(disableCentralIDPMappers)</code></li> <li><code>fn withFrontendUrl(frontendUrl)</code></li> <li><code>fn withId(id)</code></li> <li><code>fn withKeycloakOwner(keycloakOwner)</code></li> <li><code>fn withPasswordPolicy(passwordPolicy)</code></li> <li><code>fn withPasswordPolicyMixin(passwordPolicy)</code></li> <li><code>fn withRealmName(realmName)</code></li> <li><code>fn withSsoAutoRedirectEnabled(ssoAutoRedirectEnabled)</code></li> <li><code>fn withSsoRealmEnabled(ssoRealmEnabled)</code></li> <li><code>fn withSsoRealmMappers(ssoRealmMappers)</code></li> <li><code>fn withSsoRealmMappersMixin(ssoRealmMappers)</code></li> <li><code>fn withSsoRealmName(ssoRealmName)</code></li> <li><code>fn withUsers(users)</code></li> <li><code>fn withUsersMixin(users)</code></li> <li><code>obj spec.passwordPolicy</code><ul> <li><code>fn withType(type)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.realmEventConfig</code><ul> <li><code>fn withAdminEventsDetailsEnabled(adminEventsDetailsEnabled)</code></li> <li><code>fn withAdminEventsEnabled(adminEventsEnabled)</code></li> <li><code>fn withEnabledEventTypes(enabledEventTypes)</code></li> <li><code>fn withEnabledEventTypesMixin(enabledEventTypes)</code></li> <li><code>fn withEventsEnabled(eventsEnabled)</code></li> <li><code>fn withEventsExpiration(eventsExpiration)</code></li> <li><code>fn withEventsListeners(eventsListeners)</code></li> <li><code>fn withEventsListenersMixin(eventsListeners)</code></li> </ul> </li> <li><code>obj spec.ssoRealmMappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withIdentityProviderMapper(identityProviderMapper)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.themes</code><ul> <li><code>fn withAccountTheme(accountTheme)</code></li> <li><code>fn withAdminConsoleTheme(adminConsoleTheme)</code></li> <li><code>fn withEmailTheme(emailTheme)</code></li> <li><code>fn withInternationalizationEnabled(internationalizationEnabled)</code></li> <li><code>fn withLoginTheme(loginTheme)</code></li> </ul> </li> <li><code>obj spec.users</code><ul> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withUsername(username)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealm</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#obj-spec","title":"obj spec","text":"<p>\"KeycloakRealmSpec defines the desired state of KeycloakRealm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithbrowserflow","title":"fn spec.withBrowserFlow","text":"<pre><code>withBrowserFlow(browserFlow)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithbrowsersecurityheaders","title":"fn spec.withBrowserSecurityHeaders","text":"<pre><code>withBrowserSecurityHeaders(browserSecurityHeaders)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithbrowsersecurityheadersmixin","title":"fn spec.withBrowserSecurityHeadersMixin","text":"<pre><code>withBrowserSecurityHeadersMixin(browserSecurityHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithdisablecentralidpmappers","title":"fn spec.withDisableCentralIDPMappers","text":"<pre><code>withDisableCentralIDPMappers(disableCentralIDPMappers)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithfrontendurl","title":"fn spec.withFrontendUrl","text":"<pre><code>withFrontendUrl(frontendUrl)\n</code></pre> <p>\"FrontendURL Set the frontend URL for the realm. Use in combination with the default hostname provider to override the base URL for frontend requests for a specific realm.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithid","title":"fn spec.withId","text":"<pre><code>withId(id)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithkeycloakowner","title":"fn spec.withKeycloakOwner","text":"<pre><code>withKeycloakOwner(keycloakOwner)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithpasswordpolicy","title":"fn spec.withPasswordPolicy","text":"<pre><code>withPasswordPolicy(passwordPolicy)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithpasswordpolicymixin","title":"fn spec.withPasswordPolicyMixin","text":"<pre><code>withPasswordPolicyMixin(passwordPolicy)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithrealmname","title":"fn spec.withRealmName","text":"<pre><code>withRealmName(realmName)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithssoautoredirectenabled","title":"fn spec.withSsoAutoRedirectEnabled","text":"<pre><code>withSsoAutoRedirectEnabled(ssoAutoRedirectEnabled)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithssorealmenabled","title":"fn spec.withSsoRealmEnabled","text":"<pre><code>withSsoRealmEnabled(ssoRealmEnabled)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithssorealmmappers","title":"fn spec.withSsoRealmMappers","text":"<pre><code>withSsoRealmMappers(ssoRealmMappers)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithssorealmmappersmixin","title":"fn spec.withSsoRealmMappersMixin","text":"<pre><code>withSsoRealmMappersMixin(ssoRealmMappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithssorealmname","title":"fn spec.withSsoRealmName","text":"<pre><code>withSsoRealmName(ssoRealmName)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithusers","title":"fn spec.withUsers","text":"<pre><code>withUsers(users)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specwithusersmixin","title":"fn spec.withUsersMixin","text":"<pre><code>withUsersMixin(users)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#obj-specpasswordpolicy","title":"obj spec.passwordPolicy","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specpasswordpolicywithtype","title":"fn spec.passwordPolicy.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of password policy.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specpasswordpolicywithvalue","title":"fn spec.passwordPolicy.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value of password policy.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#obj-specrealmeventconfig","title":"obj spec.realmEventConfig","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwithadmineventsdetailsenabled","title":"fn spec.realmEventConfig.withAdminEventsDetailsEnabled","text":"<pre><code>withAdminEventsDetailsEnabled(adminEventsDetailsEnabled)\n</code></pre> <p>\"AdminEventsDetailsEnabled indicates whether to enable detailed admin events.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwithadmineventsenabled","title":"fn spec.realmEventConfig.withAdminEventsEnabled","text":"<pre><code>withAdminEventsEnabled(adminEventsEnabled)\n</code></pre> <p>\"AdminEventsEnabled indicates whether to enable admin events.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwithenabledeventtypes","title":"fn spec.realmEventConfig.withEnabledEventTypes","text":"<pre><code>withEnabledEventTypes(enabledEventTypes)\n</code></pre> <p>\"EnabledEventTypes is a list of event types to enable.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwithenabledeventtypesmixin","title":"fn spec.realmEventConfig.withEnabledEventTypesMixin","text":"<pre><code>withEnabledEventTypesMixin(enabledEventTypes)\n</code></pre> <p>\"EnabledEventTypes is a list of event types to enable.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwitheventsenabled","title":"fn spec.realmEventConfig.withEventsEnabled","text":"<pre><code>withEventsEnabled(eventsEnabled)\n</code></pre> <p>\"EventsEnabled indicates whether to enable events.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwitheventsexpiration","title":"fn spec.realmEventConfig.withEventsExpiration","text":"<pre><code>withEventsExpiration(eventsExpiration)\n</code></pre> <p>\"EventsExpiration is the number of seconds after which events expire.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwitheventslisteners","title":"fn spec.realmEventConfig.withEventsListeners","text":"<pre><code>withEventsListeners(eventsListeners)\n</code></pre> <p>\"EventsListeners is a list of event listeners to enable.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specrealmeventconfigwitheventslistenersmixin","title":"fn spec.realmEventConfig.withEventsListenersMixin","text":"<pre><code>withEventsListenersMixin(eventsListeners)\n</code></pre> <p>\"EventsListeners is a list of event listeners to enable.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#obj-specssorealmmappers","title":"obj spec.ssoRealmMappers","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specssorealmmapperswithconfig","title":"fn spec.ssoRealmMappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specssorealmmapperswithconfigmixin","title":"fn spec.ssoRealmMappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specssorealmmapperswithidentityprovidermapper","title":"fn spec.ssoRealmMappers.withIdentityProviderMapper","text":"<pre><code>withIdentityProviderMapper(identityProviderMapper)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specssorealmmapperswithname","title":"fn spec.ssoRealmMappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#obj-specthemes","title":"obj spec.themes","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specthemeswithaccounttheme","title":"fn spec.themes.withAccountTheme","text":"<pre><code>withAccountTheme(accountTheme)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specthemeswithadminconsoletheme","title":"fn spec.themes.withAdminConsoleTheme","text":"<pre><code>withAdminConsoleTheme(adminConsoleTheme)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specthemeswithemailtheme","title":"fn spec.themes.withEmailTheme","text":"<pre><code>withEmailTheme(emailTheme)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specthemeswithinternationalizationenabled","title":"fn spec.themes.withInternationalizationEnabled","text":"<pre><code>withInternationalizationEnabled(internationalizationEnabled)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specthemeswithlogintheme","title":"fn spec.themes.withLoginTheme","text":"<pre><code>withLoginTheme(loginTheme)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#obj-specusers","title":"obj spec.users","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specuserswithrealmroles","title":"fn spec.users.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specuserswithrealmrolesmixin","title":"fn spec.users.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>\"RealmRoles is a list of roles attached to keycloak user\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealm/#fn-specuserswithusername","title":"fn spec.users.withUsername","text":"<pre><code>withUsername(username)\n</code></pre> <p>\"Username of keycloak user\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/","title":"v1.v1alpha1.keycloakRealmComponent","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withProviderType(providerType)</code></li> <li><code>fn withRealm(realm)</code></li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmComponent</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#obj-spec","title":"obj spec","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithconfig","title":"fn spec.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithconfigmixin","title":"fn spec.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithprovidertype","title":"fn spec.withProviderType","text":"<pre><code>withProviderType(providerType)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmComponent/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/","title":"v1.v1alpha1.keycloakRealmGroup","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAccess(access)</code></li> <li><code>fn withAccessMixin(access)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withClientRoles(clientRoles)</code></li> <li><code>fn withClientRolesMixin(clientRoles)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withRealmRoles(realmRoles)</code></li> <li><code>fn withRealmRolesMixin(realmRoles)</code></li> <li><code>fn withSubGroups(subGroups)</code></li> <li><code>fn withSubGroupsMixin(subGroups)</code></li> <li><code>obj spec.clientRoles</code><ul> <li><code>fn withClientId(clientId)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmGroup</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#obj-spec","title":"obj spec","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithaccess","title":"fn spec.withAccess","text":"<pre><code>withAccess(access)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithaccessmixin","title":"fn spec.withAccessMixin","text":"<pre><code>withAccessMixin(access)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithclientroles","title":"fn spec.withClientRoles","text":"<pre><code>withClientRoles(clientRoles)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithclientrolesmixin","title":"fn spec.withClientRolesMixin","text":"<pre><code>withClientRolesMixin(clientRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithpath","title":"fn spec.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithrealmroles","title":"fn spec.withRealmRoles","text":"<pre><code>withRealmRoles(realmRoles)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithrealmrolesmixin","title":"fn spec.withRealmRolesMixin","text":"<pre><code>withRealmRolesMixin(realmRoles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithsubgroups","title":"fn spec.withSubGroups","text":"<pre><code>withSubGroups(subGroups)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specwithsubgroupsmixin","title":"fn spec.withSubGroupsMixin","text":"<pre><code>withSubGroupsMixin(subGroups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#obj-specclientroles","title":"obj spec.clientRoles","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specclientroleswithclientid","title":"fn spec.clientRoles.withClientId","text":"<pre><code>withClientId(clientId)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specclientroleswithroles","title":"fn spec.clientRoles.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmGroup/#fn-specclientroleswithrolesmixin","title":"fn spec.clientRoles.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/","title":"v1.v1alpha1.keycloakRealmIdentityProvider","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddReadTokenRoleOnCreate(addReadTokenRoleOnCreate)</code></li> <li><code>fn withAlias(alias)</code></li> <li><code>fn withAuthenticateByDefault(authenticateByDefault)</code></li> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withDisplayName(displayName)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFirstBrokerLoginFlowAlias(firstBrokerLoginFlowAlias)</code></li> <li><code>fn withLinkOnly(linkOnly)</code></li> <li><code>fn withMappers(mappers)</code></li> <li><code>fn withMappersMixin(mappers)</code></li> <li><code>fn withProviderId(providerId)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withStoreToken(storeToken)</code></li> <li><code>fn withTrustEmail(trustEmail)</code></li> <li><code>obj spec.mappers</code><ul> <li><code>fn withConfig(config)</code></li> <li><code>fn withConfigMixin(config)</code></li> <li><code>fn withIdentityProviderAlias(identityProviderAlias)</code></li> <li><code>fn withIdentityProviderMapper(identityProviderMapper)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmIdentityProvider</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#obj-spec","title":"obj spec","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithaddreadtokenroleoncreate","title":"fn spec.withAddReadTokenRoleOnCreate","text":"<pre><code>withAddReadTokenRoleOnCreate(addReadTokenRoleOnCreate)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithalias","title":"fn spec.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithauthenticatebydefault","title":"fn spec.withAuthenticateByDefault","text":"<pre><code>withAuthenticateByDefault(authenticateByDefault)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithconfig","title":"fn spec.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithconfigmixin","title":"fn spec.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithdisplayname","title":"fn spec.withDisplayName","text":"<pre><code>withDisplayName(displayName)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithenabled","title":"fn spec.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithfirstbrokerloginflowalias","title":"fn spec.withFirstBrokerLoginFlowAlias","text":"<pre><code>withFirstBrokerLoginFlowAlias(firstBrokerLoginFlowAlias)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithlinkonly","title":"fn spec.withLinkOnly","text":"<pre><code>withLinkOnly(linkOnly)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithmappers","title":"fn spec.withMappers","text":"<pre><code>withMappers(mappers)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithmappersmixin","title":"fn spec.withMappersMixin","text":"<pre><code>withMappersMixin(mappers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithproviderid","title":"fn spec.withProviderId","text":"<pre><code>withProviderId(providerId)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithstoretoken","title":"fn spec.withStoreToken","text":"<pre><code>withStoreToken(storeToken)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specwithtrustemail","title":"fn spec.withTrustEmail","text":"<pre><code>withTrustEmail(trustEmail)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#obj-specmappers","title":"obj spec.mappers","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specmapperswithconfig","title":"fn spec.mappers.withConfig","text":"<pre><code>withConfig(config)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specmapperswithconfigmixin","title":"fn spec.mappers.withConfigMixin","text":"<pre><code>withConfigMixin(config)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specmapperswithidentityprovideralias","title":"fn spec.mappers.withIdentityProviderAlias","text":"<pre><code>withIdentityProviderAlias(identityProviderAlias)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specmapperswithidentityprovidermapper","title":"fn spec.mappers.withIdentityProviderMapper","text":"<pre><code>withIdentityProviderMapper(identityProviderMapper)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmIdentityProvider/#fn-specmapperswithname","title":"fn spec.mappers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/","title":"v1.v1alpha1.keycloakRealmRole","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withComposite(composite)</code></li> <li><code>fn withComposites(composites)</code></li> <li><code>fn withCompositesMixin(composites)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withIsDefault(isDefault)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>obj spec.composites</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmRole</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#obj-spec","title":"obj spec","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithcomposite","title":"fn spec.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithcomposites","title":"fn spec.withComposites","text":"<pre><code>withComposites(composites)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithcompositesmixin","title":"fn spec.withCompositesMixin","text":"<pre><code>withCompositesMixin(composites)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithdescription","title":"fn spec.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithisdefault","title":"fn spec.withIsDefault","text":"<pre><code>withIsDefault(isDefault)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithname","title":"fn spec.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#obj-speccomposites","title":"obj spec.composites","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRole/#fn-speccompositeswithname","title":"fn spec.composites.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/","title":"v1.v1alpha1.keycloakRealmRoleBatch","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> <li><code>obj spec.roles</code><ul> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withComposite(composite)</code></li> <li><code>fn withComposites(composites)</code></li> <li><code>fn withCompositesMixin(composites)</code></li> <li><code>fn withDescription(description)</code></li> <li><code>fn withIsDefault(isDefault)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.roles.composites</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmRoleBatch</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#obj-spec","title":"obj spec","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specwithroles","title":"fn spec.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specwithrolesmixin","title":"fn spec.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#obj-specroles","title":"obj spec.roles","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithattributes","title":"fn spec.roles.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithattributesmixin","title":"fn spec.roles.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithcomposite","title":"fn spec.roles.withComposite","text":"<pre><code>withComposite(composite)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithcomposites","title":"fn spec.roles.withComposites","text":"<pre><code>withComposites(composites)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithcompositesmixin","title":"fn spec.roles.withCompositesMixin","text":"<pre><code>withCompositesMixin(composites)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithdescription","title":"fn spec.roles.withDescription","text":"<pre><code>withDescription(description)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithisdefault","title":"fn spec.roles.withIsDefault","text":"<pre><code>withIsDefault(isDefault)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specroleswithname","title":"fn spec.roles.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#obj-specrolescomposites","title":"obj spec.roles.composites","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmRoleBatch/#fn-specrolescompositeswithname","title":"fn spec.roles.composites.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/","title":"v1.v1alpha1.keycloakRealmUser","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withEmail(email)</code></li> <li><code>fn withEmailVerified(emailVerified)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFirstName(firstName)</code></li> <li><code>fn withGroups(groups)</code></li> <li><code>fn withGroupsMixin(groups)</code></li> <li><code>fn withKeepResource(keepResource)</code></li> <li><code>fn withLastName(lastName)</code></li> <li><code>fn withPassword(password)</code></li> <li><code>fn withRealm(realm)</code></li> <li><code>fn withReconciliationStrategy(reconciliationStrategy)</code></li> <li><code>fn withRequiredUserActions(requiredUserActions)</code></li> <li><code>fn withRequiredUserActionsMixin(requiredUserActions)</code></li> <li><code>fn withRoles(roles)</code></li> <li><code>fn withRolesMixin(roles)</code></li> <li><code>fn withUsername(username)</code></li> </ul>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fields","title":"Fields","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KeycloakRealmUser</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#obj-spec","title":"obj spec","text":""},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithemail","title":"fn spec.withEmail","text":"<pre><code>withEmail(email)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithemailverified","title":"fn spec.withEmailVerified","text":"<pre><code>withEmailVerified(emailVerified)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithenabled","title":"fn spec.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithfirstname","title":"fn spec.withFirstName","text":"<pre><code>withFirstName(firstName)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithgroups","title":"fn spec.withGroups","text":"<pre><code>withGroups(groups)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithgroupsmixin","title":"fn spec.withGroupsMixin","text":"<pre><code>withGroupsMixin(groups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithkeepresource","title":"fn spec.withKeepResource","text":"<pre><code>withKeepResource(keepResource)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithlastname","title":"fn spec.withLastName","text":"<pre><code>withLastName(lastName)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithpassword","title":"fn spec.withPassword","text":"<pre><code>withPassword(password)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithrealm","title":"fn spec.withRealm","text":"<pre><code>withRealm(realm)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithreconciliationstrategy","title":"fn spec.withReconciliationStrategy","text":"<pre><code>withReconciliationStrategy(reconciliationStrategy)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithrequireduseractions","title":"fn spec.withRequiredUserActions","text":"<pre><code>withRequiredUserActions(requiredUserActions)\n</code></pre> <p>\"RequiredUserActions is required action when user log in, example: CONFIGURE_TOTP, UPDATE_PASSWORD, UPDATE_PROFILE, VERIFY_EMAIL\"</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithrequireduseractionsmixin","title":"fn spec.withRequiredUserActionsMixin","text":"<pre><code>withRequiredUserActionsMixin(requiredUserActions)\n</code></pre> <p>\"RequiredUserActions is required action when user log in, example: CONFIGURE_TOTP, UPDATE_PASSWORD, UPDATE_PROFILE, VERIFY_EMAIL\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithroles","title":"fn spec.withRoles","text":"<pre><code>withRoles(roles)\n</code></pre>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithrolesmixin","title":"fn spec.withRolesMixin","text":"<pre><code>withRolesMixin(roles)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17.0/v1/v1alpha1/keycloakRealmUser/#fn-specwithusername","title":"fn spec.withUsername","text":"<pre><code>withUsername(username)\n</code></pre>"}]}